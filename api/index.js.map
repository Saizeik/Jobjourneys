{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/db.server.ts", "../app/env.server.ts", "../app/root.tsx", "../app/footer.tsx", "../app/layout.tsx", "../app/session.server.ts", "../app/models/user.server.ts", "../app/routes/PasswordResetSuccess/index.tsx", "../app/loginImages.ts", "../app/routes/password-reset/index.tsx", "../app/utils.ts", "../app/sessions.ts", "../app/routes/healthcheck.tsx", "../app/routes/jobappnotes.tsx", "../app/models/jobapp.server.ts", "../app/routes/cookie.ts", "../app/routes/forgot.tsx", "../app/routes/logout.tsx", "../app/routes/index.tsx", "../app/routes/login.tsx", "../app/routes/notes.tsx", "../app/models/note.server.ts", "../app/routes/posts.tsx", "../app/routes/join.tsx", "../app/routes/map/index.tsx", "../app/models/post.server.ts", "../app/routes/jobappnotes/$jobappnoteId.tsx", "../app/routes/jobappnotes/index.tsx", "../app/routes/jobappnotes/new.tsx", "../app/routes/notes/$noteId.tsx", "../app/routes/notes/index.tsx", "../app/routes/notes/new.tsx", "../app/routes/posts/$slug.tsx", "../app/routes/posts/admin.tsx", "../app/routes/posts/admin/$slug.tsx", "../app/routes/posts/admin/index.tsx", "../app/routes/posts/index.tsx", "../app/routes/posts/user.tsx", "../app/images.ts", "../app/routes/posts/user/$slug.tsx", "../app/routes/posts/user/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import \"./db.server\";\nimport type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\nimport { getEnv } from \"./env.server\";\nimport { PassThrough } from \"stream\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nimport { Response } from \"@remix-run/node\";\n\nimport isbot from \"isbot\";\n\n\nglobal.ENV = getEnv();\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}", "import { PrismaClient } from \"@prisma/client\";\n\nlet prisma: PrismaClient;\n\ndeclare global {\n  var __db__: PrismaClient;\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\n// in production we'll have a single connection to the DB.\nif (process.env.NODE_ENV === \"production\") {\n  prisma = new PrismaClient();\n} else {\n  if (!global.__db__) {\n    global.__db__ = new PrismaClient();\n  }\n  prisma = global.__db__;\n  prisma.$connect();\n}\n\nexport { prisma };\n", "import invariant from \"tiny-invariant\";\n\nexport function getEnv() {\n  invariant(process.env.ADMIN_EMAIL, \"ADMIN_EMAIL should be defined\");\n\n  return {\n    ADMIN_EMAIL: process.env.ADMIN_EMAIL,\n  };\n}\n\ntype ENV = ReturnType<typeof getEnv>;\n\ndeclare global {\n  var ENV: ENV;\n  interface Window {\n    ENV: ENV;\n  }\n}", "import { LinksFunction, LoaderFunction, MetaFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Links, LiveReload, Meta, Outlet, Scripts, ScrollRestoration, useLoaderData } from \"@remix-run/react\";\n\nimport Layout from \"./layout\";\nimport tailwindStylesheetUrl from \"./styles/tailwind.css\";\nimport { getUser } from \"./session.server\";\nimport { getEnv } from \"./env.server\";\nimport { useTransition, useEffect } from \"react\";\n\nexport const links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: tailwindStylesheetUrl }];\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Job Journey\",\n  viewport: \"width=device-width,initial-scale=1\"\n});\n\ntype LoaderData = {\n  user: Awaited<ReturnType<typeof getUser>>;\n  ENV: ReturnType<typeof getEnv>;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  // Declare and assign the ENV variable before its usage\n  const ENV = getEnv();\n  console.log(ENV);\n  const user = await getUser(request);\n\n  return json<LoaderData>({\n    user,\n    ENV\n  });\n};\n\nexport default function App() {\n  // Fetch the loader data\n  const data = useLoaderData<LoaderData>();\n  const { user, ENV } = data;\n\n  return (\n    // Complete HTML structure with <html> tag\n    <html lang=\"en\" className=\"h-full\">\n      <head>\n        <link\n        rel=\"stylesheet\"\n        href=\"https://unpkg.com/leaflet@1.9.3/dist/leaflet.css\"\n        integrity=\"sha256-kLaT2GOSpHechhsozzB+flnD+zUyjE2LlfWPgU04xyI=\"\n        crossOrigin=\"\" />\n\n\n        <link\n        href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap\"\n        rel=\"stylesheet\" />\n\n\n        <script\n        src=\"https://unpkg.com/leaflet@1.9.3/dist/leaflet.js\"\n        integrity=\"sha256-WBkoXOwTeyKclOHuWtc+i2uENFpDZ9YPdf5Hf+D7ewM=\"\n        crossOrigin=\"\">\n        </script>\n\n        <script src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyD-UIt1wYQzhcy_QUXVfWv0swsHXjNUGsw&libraries=places&callback=initMap\"></script>\n        <Meta />\n        <Links />\n      </head>\n\n      <body className=\"h-full\">\n        <Layout>\n          <Outlet />\n        </Layout>\n\n        <ScrollRestoration />\n        <Scripts />\n\n        <LiveReload />\n      </body>\n    </html>);\n\n}", "import React, { useState } from \"react\";\r\nimport { Link } from \"@remix-run/react\";\r\nimport home from \"home.svg\";\r\nimport jobPosts from \"jobPosts.svg\";\r\nimport map from \"map.svg\";\r\nimport notes from \"notes.svg\";\r\nimport jobNotes from \"jobNotes.svg\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst AppFooter: React.FC = () => {\r\n  const footerStyles: React.CSSProperties = {\r\n    color: \"#fff\",\r\n    height: \"4rem\", // Adjust this value based on the desired footer height\r\n    position: \"sticky\",\r\n    bottom: 0,\r\n  };\r\n\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const [dashboardIsHovered, setDashboardIsHovered] = useState(false);\r\n  const [jobPostsIsHovered, setJobPostsIsHovered] = useState(false);\r\n  const [mapIsHovered, setMapIsHovered] = useState(false);\r\n  const [notesIsHovered, setNotesIsHovered] = useState(false);\r\n  const [jobNotesIsHovered, setJobNotesIsHovered] = useState(false);\r\n\r\n  const handleDashboardIconHover = (hover: boolean) => {\r\n    setDashboardIsHovered(hover);\r\n  };\r\n\r\n  const handlejobPostsIconHover = (hover: boolean) => {\r\n    setJobPostsIsHovered(hover);\r\n  };\r\n\r\n  const handleMapIconHover = (hover: boolean) => {\r\n    setMapIsHovered(hover);\r\n  };\r\n\r\n  const handleNotesIconHover = (hover: boolean) => {\r\n    setNotesIsHovered(hover);\r\n  };\r\n  const handlejobNotesIconHover = (hover: boolean) => {\r\n    setJobNotesIsHovered(hover);\r\n  };\r\n\r\n  const location = useLocation();\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  const isLoginOrJoinPage = location.pathname === '/login' || location.pathname === '/join'  || location.pathname === '/login/new' || location.pathname === '/' \r\n\r\n  if (isLoginOrJoinPage) {\r\n    return null; // Return null to hide the footer on the login and join pages\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    \r\n      <footer\r\n        style={footerStyles}\r\n        className='bg-teal-400 py-4 text-white'\r\n      >\r\n        <nav className=\"mx-auto flex max-w-4xl justify-between\">\r\n          <Link\r\n            to=\"/posts/user\"\r\n            className=\"relative flex  w-12 flex-col items-center px-4 text-gray-300 hover:text-white \"\r\n            onMouseEnter={() => handleDashboardIconHover(true)}\r\n            onMouseLeave={() => handleDashboardIconHover(false)}\r\n          >\r\n            <img\r\n              src={home}\r\n              alt=\"home icon\"\r\n              className={`mb-1 h-4 w-4 ${\r\n                isHovered ? \"-translate-y-2 transform\" : \" \"\r\n              }`}\r\n              style={{ transition: \"transform 0.4s ease-in-out\" }}\r\n            />\r\n            <span\r\n              className={`text-xs ${dashboardIsHovered ? \"block\" : \"hidden\"} `}\r\n            >\r\n              Dashboard\r\n            </span>\r\n          </Link>\r\n          <Link\r\n            to=\"/posts\"\r\n            className=\"relative flex  w-12 flex-col items-center px-4 text-gray-300 hover:text-white\"\r\n            onMouseEnter={() => handlejobPostsIconHover(true)}\r\n            onMouseLeave={() => handlejobPostsIconHover(false)}\r\n          >\r\n            <img\r\n              src={jobPosts}\r\n              alt=\"job posts icon\"\r\n              className={`mb-1 h-4 w-4 ${\r\n                isHovered ? \"-translate-y-2 transform\" : \" \"\r\n              }`}\r\n              style={{ transition: \"transform 0.4s ease-in-out\" }}\r\n            />\r\n            <span\r\n              className={`text-xs ${jobPostsIsHovered ? \"block \" : \"hidden\"} `}\r\n            >\r\n              Job Posts\r\n            </span>\r\n          </Link>\r\n          <Link\r\n            to=\"/map\"\r\n            className=\"relative flex   w-12 flex-col items-center px-4 text-gray-300 hover:text-white\"\r\n            onMouseEnter={() => handleMapIconHover(true)}\r\n            onMouseLeave={() => handleMapIconHover(false)}\r\n          >\r\n            <img\r\n              src={map}\r\n              alt=\"map icon\"\r\n              className={`mb-1 h-4 w-4 ${\r\n                isHovered ? \"-translate-y-2 transform\" : \" \"\r\n              }`}\r\n              style={{ transition: \"transform 0.4s ease-in-out\" }}\r\n            />\r\n            <span className={`text-xs ${mapIsHovered ? \"block \" : \"hidden\"} `}>\r\n              {\" \"}\r\n              Map Journey\r\n            </span>\r\n          </Link>\r\n          <Link\r\n            to=\"/notes\"\r\n            className=\" relative flex  w-12 flex-col items-center px-4 text-gray-300 hover:text-white\"\r\n            onMouseEnter={() => handleNotesIconHover(true)}\r\n            onMouseLeave={() => handleNotesIconHover(false)}\r\n          >\r\n            <img\r\n              src={notes}\r\n              alt=\"notes icon\"\r\n              className={`mb-1 h-4 w-4 ${\r\n                isHovered ? \"-translate-y-2 transform\" : \" \"\r\n              }`}\r\n            />\r\n            <span className={`text-xs ${notesIsHovered ? \"block\" : \"hidden\"} `}>\r\n              Notes\r\n            </span>\r\n          </Link>\r\n          <Link\r\n            to=\"/jobappnotes\"\r\n            className=\"relative flex  w-12 flex-col items-center px-4 text-gray-300 hover:text-white\"\r\n            onMouseEnter={() => handlejobNotesIconHover(true)}\r\n            onMouseLeave={() => handlejobNotesIconHover(false)}\r\n          >\r\n            <img\r\n              src={jobNotes}\r\n              alt=\" job notes icon\"\r\n              className={`mb-1 h-4 w-4 ${\r\n                isHovered ? \"-translate-y-2 transform\" : \" \"\r\n              }`}\r\n              style={{ transition: \"transform 0.4s ease-in-out\" }}\r\n            />\r\n            <span\r\n              className={`text-xs ${jobNotesIsHovered ? \"block \" : \"hidden\"} `}\r\n            >\r\n              Job Notes\r\n            </span>\r\n          </Link>\r\n        </nav>\r\n        <div className='bg-teal-400 py-4 text-white mt-4'>\r\n        <p className=\" relative flex  w-12 flex-col items-center px-4 text-gray-300 hover:text-white\">\r\n          &copy; {currentYear} Nathan Walker Productions\r\n        </p>\r\n        <p className=\"relative flex  w-12 flex-col items-center px-4 text-gray-300 hover:text-white\">All rights reserved.</p>\r\n      </div>\r\n    \r\n     </footer>\r\n    \r\n  );\r\n};\r\n\r\nexport default AppFooter;\r\n", "import React from \"react\";\r\nimport { Link } from \"@remix-run/react\";\r\nimport AppFooter from \"./footer\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n// Import any other necessary components\r\n\r\ninterface LayoutProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Layout: React.FC<LayoutProps> = ({ children }) => {\r\n  const location = useLocation();\r\n\r\n  const isLoginOrJoinPage = location.pathname === '/login' || location.pathname === '/join' || location.pathname === '/forgot' ||  location.pathname === '/'\r\n\r\n  if (isLoginOrJoinPage) {\r\n    return (\r\n      <>\r\n        {children}\r\n        <AppFooter />\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"flex-grow\">{children}</div>\r\n      <AppFooter />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n", "import \"./env.server\";\nimport { createCookieSessionStorage, redirect } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\n\nimport type { User } from \"~/models/user.server\";\nimport { getUserById } from \"~/models/user.server\";\n\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\n\nconst MINUTE = 60 * 1000; // 1 minute in milliseconds\nconst TENMINUTES = MINUTE * 10;\nconst DAY = 24 * 60 * MINUTE; // 1 day in milliseconds\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"__session\",\n    httpOnly: true,\n    maxAge: 0,\n    path: \"/\",\n    sameSite: \"lax\",\n    secrets: [process.env.SESSION_SECRET],\n    secure: process.env.NODE_ENV === \"production\",\n  },\n});\n\nconst USER_SESSION_KEY = \"userId\";\n\nexport async function getSession(request: Request) {\n  const cookie = request.headers.get(\"Cookie\");\n  return sessionStorage.getSession(cookie);\n}\n\nexport async function getUserId(\n  request: Request\n): Promise<User[\"id\"] | undefined> {\n  const session = await getSession(request);\n  const userId = session.get(USER_SESSION_KEY);\n\n  const expirationTimestamp = session.get('expirationTimestamp');\n  const valid = !expirationTimestamp || Date.now() < expirationTimestamp;\n\n  return valid ? userId : undefined;\n}\n\n\n\nexport async function getUser(request: Request) {\n  const userId = await getUserId(request);\n  if (userId === undefined) return null;\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function requireUserId(\n  request: Request,\n  redirectTo: string = new URL(request.url).pathname\n) {\n  const userId = await getUserId(request);\n  if (!userId) {\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\n    throw redirect(`/login?${searchParams}`);\n  }\n  return userId;\n}\n\nexport async function requireUser(request: Request) {\n  const userId = await requireUserId(request);\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function requireAdminUser(request: Request) {\n  const user = await requireUser(request);\n  if (user.email !== ENV.ADMIN_EMAIL) {\n    throw await logout(request);\n  }\n  return user;\n}\n\n\n\nexport async function createUserSession({\n  request,\n  userId,\n  remember,\n  redirectTo,\n}: {\n  request: Request;\n  userId: string;\n  remember: boolean;\n  redirectTo: string;\n}) {\n  const session = await getSession(request);\n  session.set(USER_SESSION_KEY, userId);\n\n  const expirationTime = remember ? 2 * DAY : TENMINUTES;\n  const expirationTimestamp = Date.now() + expirationTime;\n  session.flash(\"expirationTimestamp\", expirationTimestamp);\n  setTimeout(async () => {\n    await logout(request);\n  }, expirationTime);\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.commitSession(session, {\n        maxAge: remember ?  2 * DAY / 1000 : undefined,\n      }),\n    },\n  });\n}\n\nexport async function logout(request: Request) {\n  const session = await getSession(request);\n  return redirect(\"/\", {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\n    },\n  });\n}", "import type { Password, User, PasswordReset } from \"@prisma/client\";\nimport bcrypt from \"bcryptjs\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport nodemailer from \"nodemailer\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { prisma } from \"~/db.server\";\n\nexport type { User, PasswordReset } from \"@prisma/client\";\n\nexport async function getUserById(id: User[\"id\"]) {\n  return prisma.user.findUnique({ where: { id } });\n}\n\nexport async function getUserByEmail(email: User[\"email\"]) {\n  return prisma.user.findUnique({ where: { email } });\n}\n\nexport async function createUser(email: User[\"email\"], password: string) {\n  const hashedPassword = await bcrypt.hash(password, 10);\n\n  return prisma.user.create({\n    data: {\n      email,\n      password: {\n        create: {\n          hash: hashedPassword,\n        },\n      },\n    },\n  });\n}\n\nexport async function createPasswordResetToken(userId: User[\"id\"]) {\n  const token = uuidv4();\n  const EXPIRATION_TIME = 3600000; // 1 hour\n\n  return prisma.passwordReset.create({\n    data: {\n      token,\n      userId,\n      expiresAt: new Date(Date.now() + EXPIRATION_TIME),\n    },\n  });\n}\n\nexport async function deletePasswordResetByToken(token: string) {\n  return prisma.passwordReset.delete({ where: { token } });\n}\n\nexport async function updatePassword(email: string, password: string) {\n  const hashedPassword = await bcrypt.hash(password, 10);\n\n  // Find the user by email and update their password\n  return prisma.user.update({\n    where: { email },\n    data: {\n      password: {\n        update: {\n          hash: hashedPassword,\n        },\n      },\n    },\n  });\n}\n\nexport const sendResetPasswordEmail = async (\n  user: User,\n  token: PasswordReset\n) => {\n  try {\n    // Send reset password email using Nodemailer\n    const transporter = nodemailer.createTransport({\n      // Set up your email transport configuration\n      // Example: using SMTP transport with Gmail\n      service: \"Gmail\",\n      auth: {\n        user: \"nswalker44@gmail.com\",\n        pass: \"tpjqkqdlgkgxupeb\",\n      },\n    });\n\n    const mailOptions = {\n      from: \"Admin@Jobjourneys.com\",\n      to: user.email || \"\",\n      subject: \"Password Reset\",\n      html: `\n        <p>Hi ${user.email || \"\"},</p>\n        <p>You have requested to reset your password for your Job Journey Account. Please click the link below to reset:</p>\n        <a href=\"https://jobjourneys.vercel.app/password-reset?token=${encodeURIComponent(\n          token.token\n        )}\">Reset Password</a>\n        <p>If you didn't request this, you can safely ignore this email.</p>\n      `,\n    };\n\n    // Send the email\n    await transporter.sendMail(mailOptions);\n\n    // Do not include the following lines in the function\n    // These will cause infinite recursion and errors\n    // await sendResetPasswordEmail(user, token);\n    // return redirect(\"/PasswordResetSuccess\");\n  } catch (error) {\n    // Handle any errors that occur during email sending\n    console.error(\"Error sending reset password email:\", error);\n    // You might want to return an error response here if needed\n    // return json<ActionData>({ errors: { email: \"Failed to send reset password email\" } }, { status: 500 });\n    throw new Error(\"Failed to send reset password email\");\n  }\n};\n\nexport async function deleteUserByEmail(email: User[\"email\"]) {\n  return prisma.user.delete({ where: { email } });\n}\n\nexport async function verifyLogin(\n  email: User[\"email\"],\n  password: Password[\"hash\"]\n) {\n  const userWithPassword = await prisma.user.findUnique({\n    where: { email },\n    include: {\n      password: true,\n    },\n  });\n\n  if (!userWithPassword || !userWithPassword.password) {\n    return null;\n  }\n\n  const isValid = await bcrypt.compare(\n    password,\n    userWithPassword.password.hash\n  );\n\n  if (!isValid) {\n    return null;\n  }\n\n  const { password: _password, ...userWithoutPassword } = userWithPassword;\n\n  return userWithoutPassword;\n}\n", "import { toast, Toaster } from \"react-hot-toast\";\n\nimport type {\nActionFunction,\nLoaderFunction,\nMetaFunction } from\n\"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { getUserId } from \"~/session.server\";\nimport { getUserByEmail, updatePassword } from \"~/models/user.server\";\nimport { loginImages } from \"../../loginImages\";\nimport { useEffect, useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"react-toastify/dist/ReactToastify.css?__remix_sideEffect__\";\n\nexport interface loginInfo {\n  src: string;\n  alt: string;\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  return json({});\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n\n  // Send reset password email and display toast message\n  const sendResetPasswordEmail = async (email: string) => {\n\n\n    // Your email sending logic here\n    // ...\n  };await sendResetPasswordEmail(email?.toString() || \"\");\n};\n\nfunction getRandomImage() {\n  const randomIndex = Math.floor(Math.random() * loginImages.length);\n  return loginImages[randomIndex];\n}\n\nexport default function PasswordResetSuccessPage() {\n  const [searchParams] = useSearchParams();\n  const [imageLoading, setImageLoading] = useState(true);\n  const imageLoaded = () => {\n    setImageLoading(false);\n  };\n\n  const [randomImage, setRandomImage] = useState<loginInfo>();\n\n  useEffect(() => {\n    const image = getRandomImage();\n    setRandomImage(image);\n  }, []);\n\n  const notify = () => {\n    return (\n      toast(\n      \"If you have an account, a password reset has been sent to your email address.\"\n      ));\n\n  };\n\n  return (\n    <>\r\n      <div className=\"flex min-h-full flex-col justify-center\"></div>\r\n      <main className=\"relative flex min-h-screen items-center justify-center overflow-y-auto bg-white\">\r\n        <div className=\"relative sm:pb-16 sm:pt-8\">\r\n          <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\r\n            <div className=\"relative shadow-xl sm:overflow-hidden sm:rounded-2xl\">\r\n              <div className=\"absolute inset-0\">\r\n                {randomImage &&\n                <motion.img\n                initial={{ opacity: 0 }}\n                animate={{\n                  opacity: imageLoading ? 0 : 1\n                }}\n                transition={{ delay: 0, duration: 1 }}\n                onLoad={imageLoaded}\n                src={randomImage.src}\n                alt={randomImage.alt}\n                className=\"h-full w-full object-cover\" />}\n\n                \r\n                <div className=\"absolute inset-0 bg-teal-400 mix-blend-multiply\" />\r\n              </div>\r\n              <div className=\"lg:pb-18 relative px-4 pb-8 pt-16 sm:px-6 sm:pb-14 sm:pt-24 lg:px-8 lg:pt-32\">\r\n                <h1 className=\"text-center text-6xl font-extrabold tracking-tight sm:text-8xl lg:text-9xl\">\r\n                  <span className=\"mb-4 block uppercase text-white drop-shadow-md\">\r\n                    Job Journey\r\n                  </span>\r\n                </h1>\r\n                <motion.div\n                initial={{ opacity: 0, y: '-2vh' }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 2 }}>\n\n\n                  \r\n                <p className=\"mx-auto mt-6 max-w-lg text-center text-xl text-white sm:max-w-3xl my-4\">\r\n                  If an account is associated with this email, an email\r\n                  containing instructions to reset the password has been sent.\r\n                  Please check your inbox for further instructions. If you do\r\n                  not receive an email, it's possible that no account is\r\n                  currently associated with this email address.\r\n                </p>\r\n                </motion.div>\r\n                <div\n                className=\"flex min-h-full flex-col justify-center\">\n\n                  \r\n                  {\" \"}\r\n                  <Toaster />\r\n                  <div className=\"mx-auto w-full max-w-md px-8\">\r\n                    <button\n                    type=\"submit\"\n                    className=\"bg-custom-newColor hover:bg-custom-spaceBlack focus:bg-custom-newColor  hover: w-full rounded px-4 py-2 font-medium text-white text-white\">\n                      \r\n                      <Link\n                      className=\"text-lg font-bold text-white\"\n                      to={{\n                        pathname: \"/login\",\n                        search: searchParams.toString()\n                      }}>\n                        \r\n                        Return to Login Page\r\n                      </Link>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>);\n\n}", "import jobSearch from \"jobSearch.jpg\";\r\nimport login1 from \"login1.jpg\";\r\nimport login2 from \"login2.jpg\";\r\nimport login3 from \"login3.jpg\";\r\nimport login4 from \"login4.jpg\";\r\nimport login5 from \"login5.jpg\";\r\nimport login6 from \"login6.jpg\";\r\nimport login7 from \"login7.jpg\";\r\nimport login8 from \"login8.jpg\";\r\nimport login9 from \"login9.jpg\";\r\nimport login10 from \"login10.jpg\";\r\nimport login11 from \"login11.jpg\";\r\nimport login12 from \"login12.jpg\";\r\nimport login13 from \"login13.jpg\";\r\nimport login14 from \"login14.jpg\";\r\nimport login15 from \"login15.jpg\";\r\nimport login16 from \"login16.jpg\";\r\nimport login17 from \"login17.jpg\";\r\nimport login18 from \"login18.jpg\";\r\nimport login19 from \"login19.jpg\";\r\nimport login20 from \"login20.jpg\";\r\nimport login21 from \"login21.jpg\";\r\n\r\nexport interface loginInfo {\r\n  src: string;\r\n  alt: string;\r\n}\r\n\r\nexport const loginImages: loginInfo[] = [\r\n  { src: jobSearch, alt: \"jobSearch\" },\r\n  { src: login1, alt: \"login 1\" },\r\n  { src: login2, alt: \"login 2\" },\r\n  { src: login3, alt: \"login 3\" },\r\n  { src: login4, alt: \"login 4\" },\r\n  { src: login5, alt: \"login 5\" },\r\n  { src: login6, alt: \"login 6\" },\r\n  { src: login7, alt: \"login 7\" },\r\n  { src: login8, alt: \"login 8\" },\r\n  { src: login9, alt: \"login 9\" },\r\n  { src: login10, alt: \"login 10\" },\r\n  { src: login11, alt: \"login 11\" },\r\n  { src: login12, alt: \"login 12\" },\r\n  { src: login13, alt: \"login 13\" },\r\n  { src: login14, alt: \"login 14\" },\r\n  { src: login15, alt: \"login 15\" },\r\n  { src: login16, alt: \"login 16\" },\r\n  { src: login17, alt: \"login 17\" },\r\n  { src: login18, alt: \"login 18\" },\r\n  { src: login19, alt: \"login 19\" },\r\n  { src: login20, alt: \"login 20\" },\r\n  { src: login21, alt: \"login 21\" },\r\n];\r\n", "import { json, redirect } from \"@remix-run/node\";\r\nimport { Form, useActionData, useSearchParams, Link } from \"@remix-run/react\";\r\nimport * as React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { safeRedirect } from \"~/utils\";\r\nimport { loginImages } from \"../../loginImages\";\r\nimport { getUserByEmail, updatePassword } from \"~/models/user.server\";\r\nimport { getUserId } from \"~/session.server\";\r\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\r\nimport { prisma } from \"~/db.server\";\r\nimport { toast, Toaster } from \"react-hot-toast\";\r\nimport type { ActionArgs } from \"@remix-run/node\";\r\nimport { getSession, commitSession } from \"~/sessions\";\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const userId = await getUserId(request);\r\n  if (userId) return redirect(\"/\");\r\n  return json({});\r\n};\r\n\r\ninterface ActionData {\r\n  errors: {\r\n    email?: string;\r\n    password?: string;\r\n    id?: string;\r\n    confirmPassword?: string;\r\n    userId?: string;\r\n    token?: string;\r\n  };\r\n}\r\n\r\nexport interface loginInfo {\r\n  src: string;\r\n  alt: string;\r\n}\r\n\r\nfunction getRandomImage() {\r\n  const randomIndex = Math.floor(Math.random() * loginImages.length);\r\n  return loginImages[randomIndex];\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }: ActionArgs) => {\r\n  const session = await getSession(request.headers.get(\"Cookie\"));\r\n  session.flash(\"message\", \"Password Reset Successfully!\");\r\n  const formData = await request.formData();\r\n  const email = formData.get(\"email\") || \"\";\r\n  if (typeof email !== \"string\") {\r\n    return json<ActionData>(\r\n      { errors: { email: \"Email is required\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  const password = formData.get(\"password\");\r\n\r\n  if (typeof password !== \"string\" || password.length === 0) {\r\n    return json<ActionData>(\r\n      { errors: { password: \"Password is required\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (password.length < 8) {\r\n    return json<ActionData>(\r\n      { errors: { password: \"Password is too short\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n  const confirmPassword = formData.get(\"confirmPassword\")?.toString() || \"\";\r\n  if (password !== confirmPassword) {\r\n    return json<ActionData>(\r\n      { errors: { confirmPassword: \"Passwords do not match\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  // Validate the email, password, and confirmPassword as before...\r\n\r\n  // Find the user by email\r\n  const user = await getUserByEmail(email);\r\n\r\n  if (!user) {\r\n    return json<ActionData>(\r\n      { errors: { email: \"User with this email does not exist\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  // Retrieve the associated PasswordReset record from the database based on the user's email\r\n  const passwordReset = await prisma.passwordReset.findFirst({\r\n    where: {\r\n      userId: user.id,\r\n      expiresAt: {\r\n        gte: new Date(),\r\n      },\r\n    },\r\n  });\r\n\r\n  if (!passwordReset) {\r\n    // Invalid token or token not found for the user\r\n    return json<ActionData>(\r\n      { errors: { token: \"Invalid or expired token\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  // Update the password using the `updatePassword` function\r\n  await updatePassword(email, password);\r\n\r\n  // Delete the PasswordReset record associated with the user\r\n  await prisma.passwordReset.delete({\r\n    where: { id: passwordReset.id },\r\n  });\r\n\r\n  // Append the success flag to the redirectTo URL\r\n  const redirectTo = `${safeRedirect(\r\n    formData.get(\"redirectTo\"),\r\n    \"/login\"\r\n  )}?success=true`;\r\n\r\n  return redirect(redirectTo, {\r\n    headers: {\r\n      \"Set-Cookie\": await commitSession(session),\r\n    },\r\n  });\r\n};\r\nexport default function ResetPasswordForm() {\r\n  const emailRef = React.useRef<HTMLInputElement>(null);\r\n  const [searchParams] = useSearchParams();\r\n  const successParam = searchParams.get(\"success\");\r\n  const actionData = useActionData();\r\n  const [imageLoading, setImageLoading] = useState(true);\r\n  const passwordRef = React.useRef<HTMLInputElement>(null);\r\n  const confirmPasswordRef = React.useRef<HTMLInputElement>(null);\r\n  const redirectTo = searchParams.get(\"redirectTo\") ?? undefined;\r\n  const [showSuccessMessage, setShowSuccessMessage] = useState(\r\n    successParam === \"true\"\r\n  );\r\n\r\n  const imageLoaded = () => {\r\n    setImageLoading(false);\r\n  };\r\n\r\n  // Handle the response\r\n\r\n  const [randomImage, setRandomImage] = useState<loginInfo>();\r\n\r\n  useEffect(() => {\r\n    const image = getRandomImage();\r\n    setRandomImage(image);\r\n    if (successParam === \"true\") {\r\n      setShowSuccessMessage(true);\r\n\r\n      // Show the toast message\r\n      toast.success(\"Password reset successful!\");\r\n    }\r\n  }, [successParam]);\r\n\r\n  return (\r\n    <>\r\n      <main className=\"relative flex min-h-screen items-center justify-center overflow-y-auto bg-white\">\r\n        <div className=\"relative sm:pb-16 sm:pt-8\">\r\n          <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\r\n            <div className=\"relative shadow-xl sm:overflow-hidden sm:rounded-2xl\">\r\n              <div className=\" absolute inset-0\">\r\n                {randomImage && (\r\n                  <motion.img\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{\r\n                      opacity: imageLoading ? 0 : 1,\r\n                    }}\r\n                    transition={{ delay: 0, duration: 2 }}\r\n                    onLoad={imageLoaded}\r\n                    src={randomImage.src}\r\n                    alt={randomImage.alt}\r\n                    className=\"h-full w-full object-cover\"\r\n                  />\r\n                )}\r\n                <div className=\"absolute inset-0 bg-teal-400 mix-blend-multiply\" />\r\n              </div>\r\n              <div className=\" lg:pb-18 relative px-4 pb-8 pt-16 sm:px-6 sm:pb-14 sm:pt-24 lg:px-8 lg:pt-32\">\r\n                <h1 className=\"text-center text-6xl font-extrabold tracking-tight sm:text-8xl lg:text-9xl\">\r\n                  <span className=\"mb-4 block uppercase text-white drop-shadow-md\">\r\n                    Job Journey\r\n                  </span>\r\n                </h1>\r\n                <div className=\"flex min-h-full flex-col justify-center\">\r\n                  <div className=\"mx-auto w-full max-w-md px-8\">\r\n                    <Form method=\"post\" className=\"space-y-6\">\r\n                      <div>\r\n                        <div>\r\n                          <label\r\n                            htmlFor=\"email\"\r\n                            className=\"block text-sm font-bold text-white\"\r\n                          >\r\n                            Email Address\r\n                          </label>\r\n                          <div className=\"my-2 mt-2\">\r\n                            <input\r\n                              id=\"email\"\r\n                              name=\"email\"\r\n                              type=\"email\"\r\n                              ref={emailRef}\r\n                              autoComplete=\"email\"\r\n                              aria-invalid={\r\n                                actionData?.errors?.email ? true : undefined\r\n                              }\r\n                              aria-describedby=\"email-error\"\r\n                              className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\r\n                            />\r\n                            {actionData?.errors?.email && (\r\n                              <div\r\n                                className=\"pt-1 text-red-700\"\r\n                                id=\"email-error\"\r\n                              >\r\n                                {actionData.errors.email}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <label\r\n                          htmlFor=\"password\"\r\n                          className=\"block text-sm font-bold text-white\"\r\n                        >\r\n                          Password\r\n                        </label>\r\n                        <div className=\"mt-1\">\r\n                          <input\r\n                            type=\"hidden\"\r\n                            name=\"token\"\r\n                            value={actionData?.token}\r\n                          />\r\n                          <input\r\n                            id=\"password\"\r\n                            ref={passwordRef}\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            aria-invalid={\r\n                              actionData?.errors?.password ? true : undefined\r\n                            }\r\n                            aria-describedby=\"password-error\"\r\n                            className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\r\n                          />\r\n                          {actionData?.errors?.password && (\r\n                            <div\r\n                              className=\"pt-1 text-red-700\"\r\n                              id=\"password-error\"\r\n                            >\r\n                              {actionData.errors.password}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div>\r\n                        <label\r\n                          htmlFor=\"confirmPassword\"\r\n                          className=\"block text-sm font-bold text-white\"\r\n                        >\r\n                          Confirm Password\r\n                        </label>\r\n                        <div className=\"mt-1\">\r\n                          <input\r\n                            id=\"confirmPassword\"\r\n                            ref={confirmPasswordRef}\r\n                            name=\"confirmPassword\"\r\n                            type=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            aria-invalid={\r\n                              actionData?.errors?.confirmPassword\r\n                                ? true\r\n                                : undefined\r\n                            }\r\n                            aria-describedby=\"confirmPassword-error\"\r\n                            className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\r\n                          />\r\n                          {actionData?.errors?.confirmPassword && (\r\n                            <div\r\n                              className=\"pt-1 text-red-700\"\r\n                              id=\"confirmPassword-error\"\r\n                            >\r\n                              {actionData.errors.confirmPassword}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <input\r\n                        type=\"hidden\"\r\n                        name=\"redirectTo\"\r\n                        value={redirectTo}\r\n                      />\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"bg-custom-newColor hover:bg-custom-spaceBlack focus:bg-custom-spaceBlack   hover: w-full rounded px-4 py-2 font-medium text-white text-white\"\r\n                      >\r\n                        Reset Password\r\n                      </button>\r\n                      {showSuccessMessage && (\r\n                        <motion.div\r\n                          initial={{ opacity: 0, y: \"-2vh\" }}\r\n                          animate={{ opacity: 1, y: 0 }}\r\n                          transition={{ duration: 0.5 }}\r\n                          className=\"bg-green-200 p-2 text-center text-green-800\"\r\n                        >\r\n                          Password reset successful!\r\n                        </motion.div>\r\n                      )}\r\n                      <Toaster position=\"top-center\" />\r\n\r\n                      <div className=\"flex items-center justify-center\">\r\n                        <div className=\"text-center text-sm font-bold text-white\">\r\n                          Remember your password?{\" \"}\r\n                          <Link\r\n                            className=\"text-lg font-bold text-white underline\"\r\n                            to=\"/login\"\r\n                          >\r\n                            Log in\r\n                          </Link>\r\n                        </div>\r\n                      </div>\r\n                    </Form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n", "import { useMatches } from \"@remix-run/react\";\nimport { useMemo } from \"react\";\n\nimport type { User } from \"~/models/user.server\";\n\nconst DEFAULT_REDIRECT = \"/\";\n\n/**\n * This should be used any time the redirect path is user-provided\n * (Like the query string on our login/signup pages). This avoids\n * open-redirect vulnerabilities.\n * @param {string} to The redirect destination\n * @param {string} defaultRedirect The redirect to use if the to is unsafe.\n */\nexport function safeRedirect(\n  to: FormDataEntryValue | string | null | undefined,\n  defaultRedirect: string = DEFAULT_REDIRECT\n) {\n  if (!to || typeof to !== \"string\") {\n    return defaultRedirect;\n  }\n\n  if (!to.startsWith(\"/\") || to.startsWith(\"//\")) {\n    return defaultRedirect;\n  }\n\n  const allowedRoutes = [\"/forgot\", \"/another-safe-route\"];\n\n  if (allowedRoutes.includes(to) || to.startsWith(\"/\")) {\n    return to;\n  }\n\n  return defaultRedirect\n}\n\n/**\n * This base hook is used in other hooks to quickly search for specific data\n * across all loader data using useMatches.\n * @param {string} id The route id\n * @returns {JSON|undefined} The router data or undefined if not found\n */\nexport function useMatchesData(\n  id: string\n): Record<string, unknown> | undefined {\n  const matchingRoutes = useMatches();\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id]\n  );\n  return route?.data;\n}\n\nfunction isUser(user: any): user is User {\n  return user && typeof user === \"object\" && typeof user.email === \"string\";\n}\n\nexport function useOptionalUser(): User | undefined {\n  const data = useMatchesData(\"root\");\n  if (!data || !isUser(data.user)) {\n    return undefined;\n  }\n  return data.user;\n}\n\nexport function useUser(): User {\n  const maybeUser = useOptionalUser();\n  if (!maybeUser) {\n    throw new Error(\n      \"No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.\"\n    );\n  }\n  return maybeUser;\n}\n\nexport function useOptionalAdminUser() {\n  const user = useOptionalUser();\n  if (!user) return null;\n if (user.email !== ENV.ADMIN_EMAIL) return null;\n  return user;\n}\n\nexport function validateEmail(email: unknown): email is string {\n  return typeof email === \"string\" && email.length > 3 && email.includes(\"@\");\n}\n", "import { createCookieSessionStorage } from \"@remix-run/node\";\r\n\r\nconst { getSession, commitSession } = createCookieSessionStorage({\r\n  cookie: {\r\n    name: \"__session\",\r\n    httpOnly: true,\r\n    maxAge: 60,\r\n    path: \"/\",\r\n    sameSite: \"lax\",\r\n    secrets: [\"secrets\"],\r\n    secure: true,\r\n  },\r\n});\r\n\r\nexport { getSession, commitSession };\r\n", "// learn more: https://fly.io/docs/reference/configuration/#services-http_checks\nimport type { LoaderFunction } from \"@remix-run/node\";\n\nimport { prisma } from \"~/db.server\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const host =\n    request.headers.get(\"X-Forwarded-Host\") ?? request.headers.get(\"host\");\n\n  try {\n    const url = new URL(\"/\", `http://${host}`);\n    // if we can connect to the database and make a simple query\n    // and make a HEAD request to ourselves, then we're good.\n    await Promise.all([\n      prisma.user.count(),\n      fetch(url.toString(), { method: \"HEAD\" }).then((r) => {\n        if (!r.ok) return Promise.reject(r);\n      }),\n    ]);\n    return new Response(\"OK\");\n  } catch (error: unknown) {\n    console.log(\"healthcheck \u274C\", { error });\n    return new Response(\"ERROR\", { status: 500 });\n  }\n};\n", "import type { LoaderFunction } from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { Form, Link, NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\r\n\r\nimport { requireUserId } from \"~/session.server\";\r\nimport { useUser } from \"~/utils\";\r\nimport { getJobAppNoteListItems } from \"~/models/jobapp.server\";\r\n\r\ntype LoaderData = {\r\n  jobAppNoteListItems: Awaited<ReturnType<typeof getJobAppNoteListItems>>;\r\n};\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const userId = await requireUserId(request);\r\n  const jobAppNoteListItems = await getJobAppNoteListItems({ userId });\r\n  return json<LoaderData>({ jobAppNoteListItems });\r\n};\r\n\r\nexport default function NotesPage() {\r\n  const data = useLoaderData() as LoaderData;\r\n  const user = useUser();\r\n\r\n  return (\r\n    <div className=\"flex h-full min-h-screen flex-col\">\r\n      <header className=\"flex flex-col items-center justify-between bg-teal-400  p-4 text-white md:flex-row\">\r\n        <h1 className=\"mb-2 text-3xl font-bold\">\r\n          <Link to=\".\">Job Application Notes</Link>\r\n        </h1>\r\n        <p className=\"ml-4 hidden md:block\">{user.email}</p>\r\n        <div className=\"flex flex-col md:flex-row\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"hover:bg-custom-newColor active:bg-custom-newColor m-2 rounded bg-custom-spaceBlack px-4 py-2 text-white sm:hidden md:mt-2\"\r\n          >\r\n            <Link\r\n              to=\"/posts/user\"\r\n              className=\"text-md text-white-600 font-medium\"\r\n            >\r\n              Dashboard\r\n            </Link>\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"hover:bg-custom-newColor active:bg-custom-newColor m-2 rounded bg-custom-spaceBlack px-4 py-2 text-white sm:hidden md:mt-2\"\r\n          >\r\n            <Link\r\n              to=\"/map\"\r\n              className=\"text-md text-white-600 font-medium\"\r\n            >\r\n              MapJourney\r\n            </Link>\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"hover:bg-custom-newColor active:bg-custom-newColor m-2 rounded bg-custom-spaceBlack px-4 py-2 text-white sm:hidden\"\r\n          >\r\n            <Link to=\"/notes\" className=\"text-md text-white-600 font-medium \">\r\n              Notes\r\n            </Link>\r\n          </button>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"hover:bg-custom-newColor active:bg-custom-newColor m-2 rounded bg-custom-spaceBlack px-4 py-2 text-white sm:hidden md:mt-2\"\r\n          >\r\n            <Link to=\"/posts\" className=\"text-md text-white-600 font-medium\">\r\n              Job Posts\r\n            </Link>\r\n          </button>\r\n          <Form action=\"/logout\" method=\"post\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"hover:bg-custom-newColor active:bg-custom-newColor m-2 rounded bg-custom-spaceBlack px-4 py-2 font-medium text-white\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </Form>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"flex h-full bg-white\">\r\n        <div className=\"h-full w-80 border-r bg-gray-50\">\r\n          <Link\r\n            to=\"new\"\r\n            className=\"text-custom-newColor block p-4 text-xl font-bold\"\r\n          >\r\n            + New Job Note\r\n          </Link>\r\n\r\n          <hr />\r\n\r\n          {data.jobAppNoteListItems.length === 0 ? (\r\n            <p className=\"p-4\">No notes yet</p>\r\n          ) : (\r\n            <ol>\r\n              {data.jobAppNoteListItems.map((note) => (\r\n                <li key={note.id}>\r\n                  <NavLink\r\n                    className={({ isActive }) =>\r\n                      `block border-b p-4 text-xl ${isActive ? \"bg-white\" : \"\"}`\r\n                    }\r\n                    to={note.id}\r\n                  >\r\n                    \uD83D\uDCDD {note.title}\r\n                  </NavLink>\r\n                </li>\r\n              ))}\r\n            </ol>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"flex-1 p-6\">\r\n          <Outlet />\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n", "import type { User, JobAppNote,  PreviousPosition, Prisma } from \"@prisma/client\";\r\nimport { prisma } from \"~/db.server\";\r\n\r\n\r\nexport type { JobAppNote,  PreviousPosition} from \"@prisma/client\";\r\n\r\n\r\n\r\nexport function getJobAppNote({\r\n  id,\r\n  userId,\r\n}: Pick<JobAppNote, \"id\"> & {\r\n  userId: User[\"id\"];\r\n  previousPositions: PreviousPosition[];\r\n\r\n}) {\r\n  return prisma.jobAppNote.findFirst({\r\n    where: { id, userId },\r\n    include: {\r\n      previousPositions: true,\r\n    },\r\n  });\r\n}\r\n\r\nexport function getJobAppNoteListItems({ userId }: { userId: User[\"id\"] }): Promise<Pick<JobAppNote, \"id\" | \"title\">[]> {\r\n  return prisma.jobAppNote.findMany({\r\n    where: { userId },\r\n    select: { id: true, title: true },\r\n    orderBy: { updatedAt: \"desc\" },\r\n  });\r\n}\r\n\r\n\r\n\r\nexport async function createJobAppNote({\r\n  title,\r\n  body,\r\n  yourName,\r\n  phoneNumber,\r\n  DesiredSalary,\r\n  referenceOne,\r\n  referenceTwo,\r\n  referenceThree,\r\n\r\n  previousPositions,\r\n  userId,\r\n}: Pick<JobAppNote, \"title\" | \"body\" | \"yourName\" | \"phoneNumber\" | \"DesiredSalary\" | \"referenceOne\" | \"referenceTwo\" | \"referenceThree\" | \"userId\" > & {\r\n  previousPositions: PreviousPosition[];\r\n}) {\r\n  const jobAppNote: JobAppNote = await prisma.jobAppNote.create({\r\n    data: {\r\n      title,\r\n      body,\r\n      yourName,\r\n      phoneNumber,\r\n      DesiredSalary,\r\n      referenceOne,\r\n      referenceTwo,\r\n      referenceThree,\r\n     \r\n      previousPositions: {\r\n        create: previousPositions,\r\n      },\r\n      user: {\r\n        connect: {\r\n          id: userId,\r\n        },\r\n      },\r\n    },\r\n  });\r\n  return jobAppNote;\r\n}\r\n\r\n\r\nexport async function deleteNote({\r\n  id,\r\n  \r\n}: Pick<JobAppNote, \"id\"> & { userId: User[\"id\"] }): Promise<{ count: number }> {\r\n  return prisma.$transaction(async (prisma) => {\r\n    const jobAppNote = await prisma.jobAppNote.findUnique({\r\n      where: { id },\r\n      include: { previousPositions: true },\r\n    });\r\n    if (!jobAppNote) {\r\n      throw new Error(\"Job application note not found\");\r\n    }\r\n\r\n    const deletePreviousPositions = prisma.previousPosition.deleteMany({\r\n      where: { id: { in: jobAppNote.previousPositions.map((position) => position.id) } },\r\n    });\r\n\r\n    const deleteJobAppNote = prisma.jobAppNote.delete({\r\n      where: { id },\r\n    });\r\n\r\n    await Promise.all([deletePreviousPositions, deleteJobAppNote]);\r\n    return { count: 1 };\r\n  });\r\n}\r\n", "import { redirect} from \"@remix-run/node\";\r\n\r\n// Set the session cookie with an expiration time\r\nexport function action() {\r\n  const cookieOptions = {\r\n    path: \"/\",\r\n    expires: new Date(Date.now() + 1000 * 60 * 1), // 15 minutes expiration\r\n    httpOnly: true,\r\n    secure: true, // Set to true if using HTTPS\r\n  };\r\n\r\n  const cookieHeaderValue = `session=value; Path=${\r\n    cookieOptions.path\r\n  }; Expires=${cookieOptions.expires.toUTCString()}; HttpOnly=${\r\n    cookieOptions.httpOnly\r\n  }; Secure=${cookieOptions.secure}`;\r\n\r\n  return redirect(\"/\", {\r\n    headers: {\r\n      \"Set-Cookie\": cookieHeaderValue,\r\n    },\r\n  });\r\n}\r\n\r\n// Handle sign-out action\r\nexport function signOut() {\r\n  const cookieOptions = {\r\n    path: \"/\",\r\n    expires: new Date(0), // Expire immediately\r\n    httpOnly: true,\r\n    secure: true, // Set to true if using HTTPS\r\n  };\r\n\r\n  const cookieHeaderValue = `session=; Path=${\r\n    cookieOptions.path\r\n  }; Expires=${cookieOptions.expires.toUTCString()}; HttpOnly=${\r\n    cookieOptions.httpOnly\r\n  }; Secure=${cookieOptions.secure}`;\r\n\r\n  return redirect(\"/\", {\r\n    headers: {\r\n      \"Set-Cookie\": cookieHeaderValue,\r\n    },\r\n  });\r\n}\r\n\r\nexport const actions = {\r\n  action,\r\n  signOut,\r\n};\r\n", "import type {\r\n  ActionFunction,\r\n  LoaderFunction,\r\n  MetaFunction,\r\n} from \"@remix-run/node\";\r\nimport nodemailer from \"nodemailer\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport { Form, Link, useActionData, useNavigate } from \"@remix-run/react\";\r\nimport React from \"react\";\r\nimport {\r\n  getUserByEmail,\r\n  sendResetPasswordEmail,\r\n  createPasswordResetToken,\r\n} from \"~/models/user.server\";\r\n\r\nimport { validateEmail } from \"~/utils\";\r\nimport { loginImages } from \"../loginImages\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport type { User, PasswordReset } from \"~/models/user.server\";\r\n\r\ninterface ActionData {\r\n  errors: {\r\n    email?: string;\r\n    password?: string;\r\n    user?: string;\r\n    token?: string;\r\n  };\r\n}\r\n\r\nexport interface loginInfo {\r\n  src: string;\r\n  alt: string;\r\n}\r\n\r\nfunction getRandomImage() {\r\n  const randomIndex = Math.floor(Math.random() * loginImages.length);\r\n  return loginImages[randomIndex];\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const formData = await request.formData();\r\n  const email = formData.get(\"email\");\r\n\r\n  try {\r\n    if (!validateEmail(email)) {\r\n      return json<ActionData>(\r\n        { errors: { email: \"Email is invalid\" } },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const user: User | null = await getUserByEmail(email);\r\n    if (!user) {\r\n      return json<ActionData>(\r\n        { errors: { email: \"No user found with this email\" } },\r\n        { status: 400 }\r\n      );\r\n    }\r\n    const token: PasswordReset | null = await createPasswordResetToken(user.id);\r\n\r\n    // If the token is null, handle the error\r\n    if (!token) {\r\n      return json<ActionData>(\r\n        { errors: { token: \"Failed to create password reset token\" } },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Call the function to send the reset password email\r\n    await sendResetPasswordEmail(user, token);\r\n\r\n    // Handle success case here, for example, redirect to PasswordResetSuccess\r\n    return redirect(\"/PasswordResetSuccess\");\r\n  } catch (error) {\r\n    // Handle error case here (e.g., show error message or redirect to an error page)\r\n    console.error(\"Error sending reset password email:\", error);\r\n    // You can return an error response here if needed\r\n    return json<ActionData>(\r\n      { errors: { email: \"Failed to send reset password email\" } },\r\n      { status: 500 }\r\n    );\r\n  }\r\n};\r\n\r\nexport default function ResetPassword() {\r\n  const actionData = useActionData() as ActionData;\r\n  const emailRef = React.useRef<HTMLInputElement>(null);\r\n  const [imageLoading, setImageLoading] = useState(true);\r\n\r\n  const imageLoaded = () => {\r\n    setImageLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (actionData?.errors?.email) {\r\n      emailRef.current?.focus();\r\n    }\r\n  }, [actionData]);\r\n\r\n  const [randomImage, setRandomImage] = useState<loginInfo>();\r\n\r\n  useEffect(() => {\r\n    const image = getRandomImage();\r\n    setRandomImage(image);\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"relative flex min-h-screen items-center justify-center overflow-y-auto bg-white\">\r\n      <div className=\"relative sm:pb-16 sm:pt-8\">\r\n        <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\r\n          <div className=\"relative shadow-xl sm:overflow-hidden sm:rounded-2xl\">\r\n            <div className=\"absolute inset-0\">\r\n              {randomImage && (\r\n                <motion.img\r\n                  initial={{ opacity: 0 }}\r\n                  animate={{\r\n                    opacity: imageLoading ? 0 : 1,\r\n                  }}\r\n                  transition={{ delay: 0, duration: 1 }}\r\n                  onLoad={imageLoaded}\r\n                  src={randomImage.src}\r\n                  alt={randomImage.alt}\r\n                  className=\"h-full w-full object-cover\"\r\n                />\r\n              )}\r\n              <div className=\"absolute inset-0 bg-teal-400 mix-blend-multiply\" />\r\n            </div>\r\n            <div className=\"lg:pb-18 relative px-4 pb-8 pt-16 sm:px-6 sm:pb-14 sm:pt-24 lg:px-8 lg:pt-32\">\r\n              <h1 className=\"text-center text-6xl font-extrabold tracking-tight sm:text-8xl lg:text-9xl\">\r\n                <span className=\"mb-4 block uppercase text-white drop-shadow-md\">\r\n                  Job Journey\r\n                </span>\r\n              </h1>\r\n              <div className=\"flex min-h-full flex-col justify-center\">\r\n                <div className=\"mx-auto w-full max-w-md px-8\">\r\n                  <Form method=\"post\" className=\"space-y-6\">\r\n                    <div>\r\n                      <label\r\n                        htmlFor=\"email\"\r\n                        className=\"block text-sm font-bold text-white\"\r\n                      >\r\n                        Email Address\r\n                      </label>\r\n                      <div className=\"mt-1\">\r\n                        <input\r\n                          ref={emailRef}\r\n                          id=\"email\"\r\n                          required\r\n                          autoFocus={true}\r\n                          name=\"email\"\r\n                          type=\"email\"\r\n                          autoComplete=\"email\"\r\n                          aria-invalid={\r\n                            actionData?.errors?.email ? true : undefined\r\n                          }\r\n                          aria-describedby=\"email-error\"\r\n                          className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\r\n                        />\r\n                        {actionData?.errors?.email && (\r\n                          <div className=\"pt-1 text-red-700\" id=\"email-error\">\r\n                            {actionData.errors.email}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"bg-custom-newColor hover:bg-custom-spaceBlack focus:bg-custom-newColor  hover: w-full rounded px-4 py-2 font-medium text-white text-white\"\r\n                    >\r\n                      Reset Password\r\n                    </button>\r\n\r\n                    <div className=\"flex items-center justify-center\">\r\n                      <div className=\"text-center text-sm font-bold text-white\">\r\n                        Remember your password?{\" \"}\r\n                        <Link\r\n                          className=\"text-lg font-bold text-white underline\"\r\n                          to=\"/login\"\r\n                        >\r\n                          Log in\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { logout } from \"~/session.server\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  return logout(request);\n};\n\nexport const loader: LoaderFunction = async () => {\n  return redirect(\"/\");\n};\n", "import type {\n  ActionFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { Link } from \"@remix-run/react\";\nimport { motion } from \"framer-motion\";\n\nimport { json, redirect } from \"@remix-run/node\";\nimport { useOptionalUser } from \"~/utils\";\nimport { useEffect, useState } from \"react\";\nimport { loginImages } from \"../loginImages\";\nimport { getUserId } from \"~/session.server\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getUserId(request);\n  if (userId) {\n    return redirect(\"/\");\n  }\n\n  return json({});\n};\n\nexport interface loginInfo {\n  src: string;\n  alt: string;\n}\n\nfunction getRandomImage() {\n  const randomIndex = Math.floor(Math.random() * loginImages.length);\n  return loginImages[randomIndex];\n}\n\nexport default function Index() {\n  const [imageLoading, setImageLoading] = useState(true);\n\n  const imageLoaded = () => {\n    setImageLoading(false);\n  };\n\n  const [randomImage, setRandomImage] = useState<loginInfo>();\n\n  useEffect(() => {\n    const image = getRandomImage();\n    setRandomImage(image);\n  }, []);\n\n  const user = useOptionalUser();\n  return (\n    <>\n      <main className=\"relative flex min-h-screen items-center justify-center overflow-y-auto bg-white sm:flex sm:items-center sm:justify-center\">\n        <div className=\"relative sm:pb-16 sm:pt-8\">\n          <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\n            <div className=\"relative shadow-xl sm:overflow-hidden sm:rounded-2xl\">\n              <div className=\" absolute inset-0\">\n                {randomImage && (\n                  <motion.img\n                    initial={{ opacity: 0 }}\n                    animate={{\n                      opacity: imageLoading ? 0 : 1,\n                    }}\n                    transition={{ delay: 0, duration: 2 }}\n                    onLoad={imageLoaded}\n                    src={randomImage.src}\n                    alt={randomImage.alt}\n                    className=\"h-full w-full object-cover\"\n                  />\n                )}\n\n                <div className=\"absolute inset-0 bg-teal-400 mix-blend-multiply\"></div>\n              </div>\n\n              <div className=\" lg:pb-18 relative px-4 pb-8 pt-16 sm:px-6 sm:pb-14 sm:pt-24 lg:px-8 lg:pt-32\">\n                <h1 className=\"text-center text-6xl font-extrabold tracking-tight sm:text-8xl lg:text-9xl\">\n                  <span className=\"block uppercase text-white drop-shadow-md\">\n                    Job Journey\n                  </span>\n                </h1>\n                <p className=\"mx-auto mt-6 max-w-lg text-center text-xl text-white sm:max-w-3xl\">\n                  Document your journey to finding that new job you have been\n                  dreaming of, chasing and seeking after. Build a road map and\n                  see how far you have come!\n                </p>\n                <div className=\"z-10 mx-auto mt-10  max-w-sm sm:flex sm:max-w-none sm:justify-center\">\n                  {user ? (\n                    <Link\n                      to=\"/posts/user\"\n                      className=\"flex items-center justify-center rounded-md border border-transparent bg-white px-4 py-3 text-base font-medium text-indigo-700 shadow-sm hover:bg-black hover:text-white sm:px-8\"\n                    >\n                      View Dashboard for {user.email}\n                    </Link>\n                  ) : (\n                    <div className=\"sm:mx- space-y-4 sm:flex sm:grid-cols-2 sm:gap-5 sm:space-y-0\">\n                      <Link\n                        to=\"/join\"\n                        className=\"hover:bg-custom-spaceBlack mb-4 mr-4 flex  items-center justify-center rounded-md border border-transparent bg-white px-4 py-3 text-base font-medium text-teal-400 shadow-sm hover:text-white sm:mb-0 sm:flex-shrink-0 sm:px-8 sm:py-0\"\n                      >\n                        Sign up\n                      </Link>\n                      <Link\n                        to=\"/login\"\n                        className=\" bg-custom hover:bg-custom-spaceBlack mb-4 mr-4  flex items-center justify-center rounded-md px-4 py-3 font-medium text-white sm:mb-0 sm:flex-shrink-0 sm:py-0\"\n                      >\n                        Log In\n                      </Link>\n                \n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </>\n  );\n}\n", "import type {\n  ActionFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect,  } from \"@remix-run/node\";\nimport {\n  Form,\n  Link,\n  useActionData,\n  useSearchParams,\n  useLoaderData,\n  useNavigate,\n} from \"@remix-run/react\";\nimport type { LoaderArgs } from \"@remix-run/node\";\nimport React from \"react\";\n\nimport { loginImages } from \"../loginImages\";\nimport { useEffect, useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { getSession, commitSession } from \"~/sessions\";\nimport { createUserSession, getUserId } from \"~/session.server\";\nimport { verifyLogin } from \"~/models/user.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport const loader: LoaderFunction = async ({ request }: LoaderArgs) => {\n  const userId = await getUserId(request);\n  if (userId) {\n    return redirect(\"/\");\n  }\n  const session = await getSession(request.headers.get(\"Cookie\"));\n  // Retrieve the session value set in the previous request\n  const message = session.get(\"message\") || \"Welcome!\";\n  return json(\n    { message },\n    {\n      headers: {\n        \"Set-Cookie\": await commitSession(session),\n      },\n    }\n  );\n};\n\ninterface ActionData {\n  errors?: {\n    email?: string;\n    password?: string;\n  };\n}\n\nexport interface loginInfo {\n  src: string;\n  alt: string;\n}\n\nfunction getRandomImage() {\n  const randomIndex = Math.floor(Math.random() * loginImages.length);\n  return loginImages[randomIndex];\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/posts/user\");\n  const remember = formData.get(\"remember\");\n\n  if (!validateEmail(email)) {\n    return json<ActionData>(\n      { errors: { email: \"Email is invalid\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json<ActionData>(\n      { errors: { password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json<ActionData>(\n      { errors: { password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const user = await verifyLogin(email, password);\n\n  if (!user) {\n    return json<ActionData>(\n      { errors: { email: \"Invalid email or password\" } },\n      { status: 400 }\n    );\n  }\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: remember === \"on\" ? true : false,\n    redirectTo,\n  });\n};\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Login\",\n  };\n};\n\nexport default function LoginPage() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") || \"/posts/user\";\n  const actionData = useActionData() as ActionData;\n  const emailRef = React.useRef<HTMLInputElement>(null);\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n  const [imageLoading, setImageLoading] = useState(true);\n  const { message } = useLoaderData<typeof loader>();\n  const navigate = useNavigate()\n\n  \n  const imageLoaded = () => {\n    setImageLoading(false);\n  };\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  const [randomImage, setRandomImage] = useState<loginInfo>();\n\n  useEffect(() => {\n    const image = getRandomImage();\n    setRandomImage(image);\n  }, []);\n\n  return (\n    <>\n      <main className=\"relative flex min-h-screen items-center justify-center overflow-y-auto bg-white\">\n        <div className=\"relative sm:pb-16 sm:pt-8\">\n          <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\n            <div className=\"relative shadow-xl sm:overflow-hidden sm:rounded-2xl\">\n              <div className=\" absolute inset-0\">\n                {randomImage && (\n                  <motion.img\n                    initial={{ opacity: 0 }}\n                    animate={{\n                      opacity: imageLoading ? 0 : 1,\n                    }}\n                    transition={{ delay: 0, duration: 2 }}\n                    onLoad={imageLoaded}\n                    src={randomImage.src}\n                    alt={randomImage.alt}\n                    className=\"h-full w-full object-cover\"\n                  />\n                )}\n                <div className=\"absolute inset-0 bg-teal-400 mix-blend-multiply\" />\n              </div>\n                 \n              <div className=\" lg:pb-18 relative px-4 pb-8 pt-16 sm:px-6 sm:pb-14 sm:pt-24 lg:px-8 lg:pt-32\">\n                 <motion.div\n                  className=\"flex min-h-full flex-col justify-center mb-2\"\n                  initial={{ opacity: 0, x: 0 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ duration: 2 }}\n                >\n                  <p className=\"text-center text-xl font-bold text-white\">\n                    {message}\n                  </p>\n                </motion.div>\n                <h1 className=\"text-center text-6xl font-extrabold tracking-tight sm:text-8xl lg:text-9xl\">\n                  <span className=\"mb-4 block uppercase text-white drop-shadow-md\">\n                    Job Journey\n                  </span>\n                </h1>\n            \n\n                <div className=\"flex min-h-full flex-col justify-center\">\n                  <div className=\"mx-auto w-full max-w-md px-8\">\n                    <Form method=\"post\" className=\"space-y-6\">\n                      <div className = \"mt-2\">\n                        <label\n                          htmlFor=\"email\"\n                          className=\"block text-sm font-bold  text-white\"\n                        >\n                          Email address\n                        </label>\n                        <div className=\"mt-1\">\n                          <input\n                            ref={emailRef}\n                            id=\"email\"\n                            required\n                            autoFocus={true}\n                            name=\"email\"\n                            type=\"email\"\n                            autoComplete=\"email\"\n                            aria-invalid={\n                              actionData?.errors?.email ? true : undefined\n                            }\n                            aria-describedby=\"email-error\"\n                            className=\"w-full rounded border border-gray-500  px-2 py-1 text-lg\"\n                          />\n                          {actionData?.errors?.email && (\n                            <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                              {actionData.errors.email}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n\n                      <div>\n                        <label\n                          htmlFor=\"password\"\n                          className=\"block text-sm font-bold text-white\"\n                        >\n                          Password\n                        </label>\n                        <div className=\"mt-1\">\n                          <input\n                            id=\"password\"\n                            ref={passwordRef}\n                            name=\"password\"\n                            type=\"password\"\n                            autoComplete=\"current-password\"\n                            aria-invalid={\n                              actionData?.errors?.password ? true : undefined\n                            }\n                            aria-describedby=\"password-error\"\n                            className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n                          />\n                          {actionData?.errors?.password && (\n                            <div\n                              className=\"pt-1 text-red-700\"\n                              id=\"password-error\"\n                            >\n                              {actionData.errors.password}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n\n                      <input\n                        type=\"hidden\"\n                        name=\"redirectTo\"\n                        value={redirectTo}\n                      />\n                      <button\n                        type=\"submit\"\n                        className=\"bg-custom-newColor hover:bg-custom-spaceBlack focus:bg-custom-spaceBlack   hover: w-full rounded px-4 py-2 font-medium text-white text-white\"\n                      >\n                        Log in\n                      </button>\n                      <div className=\"sm: flex items-center justify-center justify-between\">\n                        <div className=\"flex items-center\">\n                          <input\n                            id=\"remember\"\n                            name=\"remember\"\n                            type=\"checkbox\"\n                            className=\"h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                          />\n                          <label\n                            htmlFor=\"remember\"\n                            className=\"mx-4  border-blue-400 text-sm font-bold text-white\"\n                          >\n                            Remember me\n                          </label>\n                        </div>\n                        <div className=\"text-center text-md font-bold text-white\">\n                          Don't have an account?{\" \"}\n                          <div>\n                          <Link\n                            className=\"text-lg font-bold text-white underline\"\n                            to={{\n                              pathname: \"/join\",\n                              search: searchParams.toString(),\n                            }}\n                          >\n                            Sign up\n                          </Link>\n                          </div>\n                        </div>\n                        \n                        <Link\n                          className=\"inline text-lg font-bold text-white underline mx-4\"\n                          to = \"/forgot\"\n                        >\n                          Reset Password\n                        </Link>\n                      </div>\n                    </Form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </>\n  );\n}", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Form, Link, NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\n\nimport { requireUserId } from \"~/session.server\";\nimport { useUser } from \"~/utils\";\nimport { getNoteListItems } from \"~/models/note.server\";\n\ntype LoaderData = {\n  noteListItems: Awaited<ReturnType<typeof getNoteListItems>>;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await requireUserId(request);\n  const noteListItems = await getNoteListItems({ userId });\n  return json<LoaderData>({ noteListItems });\n};\n\nexport default function NotesPage() {\n  const data = useLoaderData() as LoaderData;\n  const user = useUser();\n\n  return (\n    <div className=\"flex h-full min-h-screen flex-col\">\n      <header className=\"flex flex-col items-center justify-between bg-teal-400 p-4 font-bold text-white md:flex-row\">\n        <div className=\"flex items-center\">\n          <h1 className=\"mb-2 text-3xl font-bold\">\n            <Link to=\".\">Notes</Link>\n          </h1>\n          <p className=\"ml-4 hidden md:block\">{user.email}</p>\n        </div>\n\n        <div className=\"flex flex-col md:flex-row\">\n          <button\n            type=\"submit\"\n            className=\"bg-custom-newColor m-2 rounded px-4 py-2 font-medium text-white hover:bg-black active:bg-black sm:hidden\"\n          >\n            <Link\n              to=\"/posts/user\"\n              className=\"text-md text-whit-600 mb-4 md:mb-0\"\n            >\n              Dashboard\n            </Link>\n          </button>\n          <button\n            type=\"submit\"\n            className=\"bg-custom-newColor m-2 rounded px-4 py-2 font-medium text-white hover:bg-black active:bg-black sm:hidden\"\n          >\n            <Link\n              to=\"/map\"\n              className=\"text-md text-whit-600 mb-4 md:mb-0\"\n            >\n              MapJourney\n            </Link>\n          </button>\n          <button\n            type=\"submit\"\n            className=\"bg-custom-newColor m-2 rounded px-4 py-2 font-medium text-white hover:bg-black active:bg-black sm:hidden\"\n          >\n            <Link\n              to=\"/jobappnotes\"\n              className=\"text-md text-whit-600 mb-4 md:mb-0\"\n            >\n              Job App Notes\n            </Link>\n          </button>\n\n          <button\n            type=\"submit\"\n            className=\"bg-custom-newColor m-2 rounded px-4 py-2 font-medium text-white hover:bg-black active:bg-black sm:hidden\"\n          >\n            <Link to=\"/posts\" className=\"text-md text-whit-600 mb-4 md:mb-0\">\n              Job Posts\n            </Link>\n          </button>\n\n          <Form action=\"/logout\" method=\"post\">\n            <button\n              type=\"submit\"\n              className=\"bg-custom-newColor hover:bg-custom-newColor active:bg-custom-newColor m-2 rounded px-4 py-2 font-medium text-white\"\n            >\n              Logout\n            </button>\n          </Form>\n        </div>\n      </header>\n\n      <main className=\"flex h-full bg-white\">\n        <div className=\"h-full w-80 border-r bg-gray-50\">\n          <Link\n            to=\"new\"\n            className=\"text-custom-newColor block p-4 text-xl font-medium\"\n          >\n            + New Note\n          </Link>\n\n          <hr />\n\n          {data.noteListItems.length === 0 ? (\n            <p className=\"p-4\">No notes yet</p>\n          ) : (\n            <ol>\n              {data.noteListItems.map((note) => (\n                <li key={note.id}>\n                  <NavLink\n                    className={({ isActive }) =>\n                      `block border-b p-4 text-xl ${isActive ? \"bg-white\" : \"\"}`\n                    }\n                    to={note.id}\n                  >\n                    \uD83D\uDCDD {note.title}\n                  </NavLink>\n                </li>\n              ))}\n            </ol>\n          )}\n        </div>\n\n        <div className=\"flex-1 p-6\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n}\n", "import type { User, Note } from \"@prisma/client\";\n\nimport { prisma } from \"~/db.server\";\n\nexport type { Note } from \"@prisma/client\";\n\nexport function getNote({\n  id,\n  userId,\n}: Pick<Note, \"id\"> & {\n  userId: User[\"id\"];\n}) {\n  return prisma.note.findFirst({\n    where: { id, userId },\n  });\n}\n\nexport function getNoteListItems({ userId }: { userId: User[\"id\"] }) {\n  return prisma.note.findMany({\n    where: { userId },\n    select: { id: true, title: true },\n    orderBy: { updatedAt: \"desc\" },\n  });\n}\n\nexport function createNote({\n  body,\n  title,\n  userId,\n}: Pick<Note, \"body\" | \"title\"> & {\n  userId: User[\"id\"];\n}) {\n  return prisma.note.create({\n    data: {\n      title,\n      body,\n      user: {\n        connect: {\n          id: userId,\n        },\n      },\n    },\n  });\n}\n\nexport function deleteNote({\n  id,\n  userId,\n}: Pick<Note, \"id\"> & { userId: User[\"id\"] }) {\n  return prisma.note.deleteMany({\n    where: { id, userId },\n  });\n}\n", "import { Outlet } from \"@remix-run/react\";\n\nexport default function PostsRoute() {\n  return <Outlet />;\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  return (\n    <div className=\"text-red-500\">\n      Oh no, something went wrong!\n      <pre>{error.message}</pre>\n    </div>\n  );\n}", "import type {\n  ActionFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\nimport { getUserId, createUserSession } from \"~/session.server\";\nimport { createUser, getUserByEmail } from \"~/models/user.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\nimport { loginImages } from \"../loginImages\";\nimport { useEffect, useState } from \"react\";\nimport { motion } from \"framer-motion\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\ninterface ActionData {\n  errors: {\n    email?: string;\n    password?: string;\n  };\n}\n\nexport interface loginInfo {\n  src: string;\n  alt: string;\n}\n\nfunction getRandomImage() {\n  const randomIndex = Math.floor(Math.random() * loginImages.length);\n  return loginImages[randomIndex];\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/posts/user\");\n\n  if (!validateEmail(email)) {\n    return json<ActionData>(\n      { errors: { email: \"Email is invalid\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json<ActionData>(\n      { errors: { password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json<ActionData>(\n      { errors: { password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const existingUser = await getUserByEmail(email);\n  if (existingUser) {\n    return json<ActionData>(\n      { errors: { email: \"A user already exists with this email\" } },\n      { status: 400 }\n    );\n  }\n\n  const user = await createUser(email, password);\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: false,\n    redirectTo,\n  });\n};\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Sign Up\",\n  };\n};\n\nexport default function Join() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") ?? undefined;\n  const actionData = useActionData() as ActionData;\n  const emailRef = React.useRef<HTMLInputElement>(null);\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n  const [imageLoading, setImageLoading] = useState(true);\n\n  const imageLoaded = () => {\n    setImageLoading(false);\n  };\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  const [randomImage, setRandomImage] = useState<loginInfo>();\n\n  useEffect(() => {\n    const image = getRandomImage();\n    setRandomImage(image);\n  }, []);\n\n  return (\n    <main className=\"relative flex min-h-screen items-center justify-center bg-white overflow-y-auto\">\n      <div className=\"relative sm:pb-16 sm:pt-8\">\n        <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\n          <div className=\"relative shadow-xl sm:overflow-hidden sm:rounded-2xl\">\n            <div className=\" absolute inset-0\">\n              {randomImage && (\n                <motion.img\n                  initial={{ opacity: 0 }}\n                  animate={{\n                    opacity: imageLoading ? 0 : 1,\n                  }}\n                  transition={{ delay: 0, duration: 1 }}\n                  onLoad={imageLoaded}\n                  src={randomImage.src}\n                  alt={randomImage.alt}\n                  className=\"h-full w-full object-cover\"\n                />\n              )}\n              <div className=\"absolute inset-0 bg-teal-400 mix-blend-multiply\" />\n            </div>\n            <div className=\" lg:pb-18 relative px-4 pb-8 pt-16 sm:px-6 sm:pb-14 sm:pt-24 lg:px-8 lg:pt-32\">\n              <h1 className=\"text-center text-6xl font-extrabold tracking-tight sm:text-8xl lg:text-9xl\">\n                <span className=\"mb-4 block uppercase text-white drop-shadow-md\">\n                  Job Journey\n                </span>\n              </h1>\n              <div className=\"flex min-h-full flex-col justify-center\">\n                <div className=\"mx-auto w-full max-w-md px-8\">\n                  <Form method=\"post\" className=\"space-y-6\">\n                    <div>\n                      <label\n                        htmlFor=\"email\"\n                        className=\"block text-sm font-bold text-white\"\n                      >\n                        Email address\n                      </label>\n                      <div className=\"mt-1\">\n                        <input\n                          ref={emailRef}\n                          id=\"email\"\n                          required\n                          autoFocus={true}\n                          name=\"email\"\n                          type=\"email\"\n                          autoComplete=\"email\"\n                          aria-invalid={\n                            actionData?.errors?.email ? true : undefined\n                          }\n                          aria-describedby=\"email-error\"\n                          className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n                        />\n                        {actionData?.errors?.email && (\n                          <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                            {actionData.errors.email}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n\n                    <div>\n                      <label\n                        htmlFor=\"password\"\n                        className=\"block text-sm font-bold text-white\"\n                      >\n                        Password\n                      </label>\n                      <div className=\"mt-1\">\n                        <input\n                          id=\"password\"\n                          ref={passwordRef}\n                          name=\"password\"\n                          type=\"password\"\n                          autoComplete=\"new-password\"\n                          aria-invalid={\n                            actionData?.errors?.password ? true : undefined\n                          }\n                          aria-describedby=\"password-error\"\n                          className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n                        />\n                        {actionData?.errors?.password && (\n                          <div\n                            className=\"pt-1 text-red-700\"\n                            id=\"password-error\"\n                          >\n                            {actionData.errors.password}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n\n                    <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n                    <button\n                      type=\"submit\"\n                      className=\"bg-custom-newColor hover:bg-custom-spaceBlack focus:bg-custom-newColor  hover: w-full rounded px-4 py-2 font-medium text-white text-white\"\n                      \n                    >\n                      Create Account\n                    </button>\n                    <div className=\"flex items-center justify-center\">\n                      <div className=\"text-center text-sm font-bold text-white\">\n                        Already have an account?{\" \"}\n                        <Link\n                          className=\"text-lg font-bold text-white underline\"\n                          to={{\n                            pathname: \"/login\",\n                            search: searchParams.toString(),\n                          }}\n                        >\n                          Log in\n                        </Link>\n                      </div>\n                    </div>\n                  </Form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n}\n", "import React, { useState } from \"react\";\r\nimport { Link, Form } from \"@remix-run/react\";\r\nimport { Map, Marker, Overlay } from \"pigeon-maps\";\r\nimport { maptiler } from \"pigeon-maps/providers\";\r\nimport type { LoaderFunction } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { getPostListings } from \"~/models/post.server\";\r\nimport { requireUserId } from \"~/session.server\";\r\nimport { useOptionalAdminUser, useOptionalUser } from \"~/utils\";\r\nimport { useUser } from \"~/utils\";\r\n\r\n\r\ntype LoaderData = {\r\n  posts: Awaited<ReturnType<typeof getPostListings>>;\r\n};\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const userId = await requireUserId(request);\r\n  const posts = await getPostListings({ userId: userId });\r\n  return json<LoaderData>({ posts });\r\n};\r\n\r\nexport default function MapJourney() {\r\n  const user = useOptionalUser();\r\n  const username = useUser();\r\n  const maptilerProvider = maptiler(\"5ggIxxFRzBPeRaG8yvf5\", \"streets\");\r\n\r\n  const { posts } = useLoaderData() as LoaderData;\r\n  console.log(\"posts\", posts);\r\n\r\n  const postsWithNumbers = posts.map(\r\n    ({\r\n      coordinateLat: lat,\r\n      coordinateLong: long,\r\n      appStatus: appStatus,\r\n      ...rest\r\n    }) => {\r\n      const parsedLat = parseFloat(lat);\r\n      const parsedLong = parseFloat(long);\r\n\r\n      const color =\r\n        appStatus === \"Applied\"\r\n          ? \"blue\"\r\n          : appStatus === \"Interviewing\"\r\n          ? \"orange\"\r\n          : appStatus === \"Hired\"\r\n          ? \"green\"\r\n          : appStatus === \"Not-selected\"\r\n          ? \"red\"\r\n          : \"\";\r\n\r\n      return {\r\n        color: color,\r\n        coordinateLat: parsedLat,\r\n        coordinateLong: parsedLong,\r\n        appStatus: appStatus,\r\n        ...rest,\r\n      };\r\n    }\r\n  );\r\n  const [displayTitle, setDisplayTitle] = useState(\"\");\r\n  const handleClick = (title: string) => {\r\n    setDisplayTitle(title);\r\n  };\r\n\r\n  /*const titleDisplay = posts.map(\r\n    ({title: titl, ...rest}) =>{\r\n      const titleDisplayed = titl;\r\n      return{\r\n        title:titleDisplayed,\r\n        ...rest,\r\n      }\r\n    }\r\n  ) */\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"flex h-full min-h-screen flex-col\">\r\n        <header className=\"flex flex-col items-center justify-between bg-teal-400 p-4 text-white md:flex-row\">\r\n          <h1 className=\"mb-4 text-3xl font-bold\">\r\n            <Link to=\".\">Map Journey</Link>\r\n          </h1>\r\n          <div className=\"flex flex-col md:flex-row\">\r\n          <button className=\"sm:hidden\">\r\n            {\" \"}\r\n            {user ? (\r\n              <Link\r\n                to=\"/notes\"\r\n                className=\"mb-4 mr-4 flex items-center justify-center rounded-md border border-transparent bg-white px-4  py-2 text-base font-medium text-teal-400 shadow-sm hover:bg-black hover:text-white md:mb-0 md:hidden\"\r\n              >\r\n                Notes\r\n              </Link>\r\n            ) : null}\r\n          </button>\r\n          <button className=\"sm:hidden\">\r\n            {\" \"}\r\n            {user ? (\r\n              <Link\r\n                to=\"/jobappnotes\"\r\n                className=\"mb-4 mr-4 flex items-center justify-center rounded-md border border-transparent bg-white px-4  py-2 text-base font-medium text-teal-400 shadow-sm hover:bg-black hover:text-white md:mb-0 md:hidden\"\r\n              >\r\n                Job App Notes\r\n              </Link>\r\n            ) : null}\r\n          </button>\r\n          <button className=\"sm:hidden\">\r\n            {user ? (\r\n              <Link\r\n                to=\"/posts\"\r\n                className=\"mb-4 mr-4 flex items-center justify-center rounded-md border border-transparent bg-white px-4 py-2 text-base font-medium text-teal-400 shadow-sm hover:bg-black hover:text-white sm:hidden md:mb-0\"\r\n              >\r\n                Job Posts\r\n              </Link>\r\n            ) : null}\r\n          </button>\r\n          <Form action=\"/logout\" method=\"post\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"mb-2 mr-2 rounded bg-white px-4 py-2 font-medium text-teal-400 hover:bg-black hover:text-white active:bg-black md:mb-0\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </Form>\r\n          <p className=\"hidden md:hidden \">{username.email}</p>\r\n          </div>\r\n        </header>\r\n        <div>\r\n          <div>\r\n            <div className=\"map-key bg-black\">\r\n              <div className=\"map-key-item\">\r\n                <div className=\"map-key-labe 600 ml-2 font-bold text-white\">\r\n                  Applied = \uD83D\uDD35\r\n                </div>\r\n              </div>\r\n              <div className=\"map-key-item\">\r\n                <div className=\"map-key-label 600 ml-2 font-bold text-white\">\r\n                  Interviewing = \uD83D\uDFE1\r\n                </div>\r\n              </div>\r\n              <div className=\"map-key-item\">\r\n                <div className=\"map-key-label 600 ml-2 font-bold text-white\">\r\n                  Hired = \uD83D\uDFE2\r\n                </div>\r\n              </div>\r\n              <div className=\"map-key-item\">\r\n                <div className=\"map-key-label 600 ml-2 font-bold text-white\">\r\n                  Not-selected = \uD83D\uDD34\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <ol className=\"text-black-600 m-2 list-decimal\">\r\n              <Map\r\n                provider={maptilerProvider}\r\n                height={1000}\r\n                defaultCenter={[47.116386, -101.299591]}\r\n                defaultZoom={4.5}\r\n                mouseEvents={true}\r\n              >\r\n                {postsWithNumbers.map((post) => (\r\n                  <Marker\r\n                    width={50}\r\n                    color={post.color}\r\n                    anchor={[post.coordinateLat, post.coordinateLong]}\r\n                    onClick={() => handleClick(post.title)}\r\n                  />\r\n                ))}\r\n\r\n                {postsWithNumbers.map((post) => (\r\n                  <Overlay\r\n                    anchor={[post.coordinateLat, post.coordinateLong]}\r\n                    offset={[5, 5]}\r\n                  >\r\n                    <div>\r\n                      {displayTitle && (\r\n                        <li>\r\n                          <p className=\"text-blue-600 \">{post.title}</p>\r\n                        </li>\r\n                      )}\r\n                    </div>\r\n                  </Overlay>\r\n                ))}\r\n              </Map>\r\n            </ol>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n", "import type {User, Post } from \"@prisma/client\";\nimport { prisma } from \"~/db.server\";\n\nexport type { Post };\n\nexport async function getPostListings({ userId }: { userId: User[\"id\"] }) {\n    return prisma.post.findMany({\n      where: { userId },\n      select: {\n        slug: true,\n        title: true,\n        address: true,\n        date:true,\n       userId:true,\n       jobAppLink: true, \n       appStatus: true,\n       coordinateLat:true,\n       coordinateLong:true,\n      },\n    \n      orderBy: { updatedAt: \"asc\" }, \n    });\n  }\n\n  export async function adminGetPostListings(){\n    return prisma.post.findMany({\n     select: {\n        slug: true,\n        title: true,\n        address: true,\n        jobAppLink:true,\n        appStatus: true,\n        date:true,\n        userId: true,\n        User:true,\n        \n       \n  }\n})\n  }\n\nexport async function getPosts() {\n    return prisma.post.findMany();\n  }\n\n  export async function getPost(slug: string) {\n    return prisma.post.findUnique({ where: { slug } });\n  }\n\n  export async function createPost(post: Pick<Post, 'slug'| 'title' | 'address'| 'date'| 'jobAppLink'|'appStatus'|'coordinateLat'|'coordinateLong'| 'markdown' |'userId'>){\n    return prisma.post.create({data:post})\n  }\n\n  export async function updatePost(slug: string, post: Pick<Post, 'slug'| 'title' | 'address'| 'date'|  'jobAppLink'| 'appStatus'| 'coordinateLat'|'coordinateLong'| 'markdown'| 'userId'\n  >){\n    return prisma.post.update({data:post, where:{slug}});\n  }\n\n  export async function deletePost(slug:string){\n    return prisma.post.delete({where:{slug}});\n  }", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport { Form, useCatch, useLoaderData } from \"@remix-run/react\";\r\nimport invariant from \"tiny-invariant\";\r\nimport { motion } from \"framer-motion\";\r\nimport type { JobAppNote as ServerJobAppNote, PreviousPosition as ServerPreviousPosition } from \"~/models/jobapp.server\";\r\nimport { deleteNote } from \"~/models/jobapp.server\";\r\nimport { getJobAppNote } from \"~/models/jobapp.server\";\r\nimport { requireUserId } from \"~/session.server\";\r\n\r\ntype LoaderJobAppData = {\r\n  jobappnote: ServerJobAppNote;\r\n  previousPositions: ServerPreviousPosition[];\r\n};\r\nexport interface JobAppNote {\r\n  id: string;\r\n  userId: string;\r\n  title: string;\r\n  yourName: string;\r\n  phoneNumber: string;\r\n  DesiredSalary: string;\r\n  referenceOne: string;\r\n  referenceTwo: string;\r\n  referenceThree: string;\r\n  previousPositions: ServerPreviousPosition[];\r\n  body: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\n\r\nexport const loader: LoaderFunction = async ({ request, params }) => {\r\n  const userId = await requireUserId(request);\r\n  invariant(params.jobappnoteId, \"noteId not found\");\r\n\r\n  const jobappnote = await getJobAppNote({\r\n    userId,\r\n    previousPositions: [],\r\n    id: params.jobappnoteId,\r\n  });\r\n  if (!jobappnote) {\r\n    throw new Response(\"Not Found\", { status: 404 });\r\n  }\r\n  const previousPositions: ServerPreviousPosition[] = jobappnote.previousPositions\r\n  return json<LoaderJobAppData>({ jobappnote, previousPositions });\r\n};\r\n\r\nexport const action: ActionFunction = async ({ request, params }) => {\r\n  const userId = await requireUserId(request);\r\n  invariant(params.jobappnoteId, \"jobappnoteId not found\");\r\n\r\n  await deleteNote({ userId, id: params.jobappnoteId });\r\n\r\n  return redirect(\"/jobappnotes\");\r\n};\r\n\r\nexport default function NoteDetailsPage() {\r\n  const data = useLoaderData() as unknown as LoaderJobAppData;\r\n\r\n  const container = {\r\n  hidden: { opacity: 0 },\r\n  show: {\r\n    opacity: 1,\r\n    transition: {\r\n      delayChildren: 0.5\r\n    }\r\n  }\r\n}\r\n\r\nconst item = {\r\n  hidden: { opacity: 0 },\r\n  show: { opacity: 1 }\r\n}\r\n\r\n  return (\r\n   \r\n    <div>\r\n       <motion.ul\r\n    variants={container}\r\n    initial=\"hidden\"\r\n    animate=\"show\"\r\n  ><div className=\"w-full max-w-sm bg-gradient-to-br from-teal-400 to black shadow-lg border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 px-4 py-2 mx-0 mt-2 mb-4 hover:shadow-xl transition duration-300 ease-in-out hover:translate-x-1 \">\r\n    <motion.li variants={item} >\r\n     <h3 className=\"block text-gray-700 font-bold mb-2 text-2xl font-bold\">{data.jobappnote.title}</h3></motion.li>\r\n      <motion.li variants={item} ><p className=\" block text-gray-700 font-bold mb-2 py-6 text-lg\">Name: {\" \"} {data.jobappnote.yourName}</p></motion.li> \r\n      <motion.li variants={item} ><p className=\"block text-gray-700 font-bold mb-2 py-6 text-lg\">Mobile Number: {\" \"} {data.jobappnote.phoneNumber}</p></motion.li>\r\n      <motion.li variants={item} ><p className=\"block text-gray-700 font-bold mb-2 py-6 text-lg\">Desired Salary: {\" \"} {data.jobappnote.DesiredSalary}</p></motion.li>\r\n      <motion.li variants={item} ><p className=\"block text-gray-700 font-bold mb-2 py-6 text-lg\">Reference 1: {\" \"}{data.jobappnote.referenceOne}</p></motion.li>\r\n      <motion.li variants={item} ><p className=\"block text-gray-700 font-bold mb-2 py-6 text-lg\">Reference 2: {\" \"}{data.jobappnote.referenceTwo}</p></motion.li>\r\n      <motion.li variants={item} ><p className=\"block text-gray-700 font-bold mb-2 py-6 text-lg\">Reference 3: {\" \"} {data.jobappnote.referenceThree}</p></motion.li>\r\n      </div>\r\n      </motion.ul>\r\n     \r\n      <div className=\"space-y-4\">\r\n     \r\n          \r\n      {data.previousPositions.map((position, index) => (\r\n    \r\n  <motion.ul\r\n  variants={container}\r\n  initial=\"hidden\"\r\n  animate=\"show\"\r\n>\r\n<div className=\"w-full max-w-sm bg-custom-newColor  shadow-lg  border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 px-4 py-2 mx-0 my-4 hover:shadow-xl transition duration-300 ease-in-out hover:translate-x-1\">\r\n  <div key={index}>\r\n  <motion.li variants={item} ><h4 className=\"block font-bold text-white text-xl  mb-2 py-6  \">{position.positionTitle}</h4></motion.li>\r\n  <motion.li variants={item} > <p className=\"block font-bold text-white  text-lg mb-2 py-6\">Duties: {\" \"} {position.duties}</p></motion.li>\r\n  <motion.li variants={item} ><p className=\"block font-bold text-white text-lg  mb-2 py-6\">Employer Name: {\" \"} {position.employerName}</p></motion.li>\r\n  <motion.li variants={item} ><p className=\"block font-bold text-white text-lg mb-2 py-6\">Employer Address: {\" \"} {position.address}</p></motion.li>\r\n  <motion.li variants={item} > <p className=\"block font-bold text-white  text-lg  mb-2 py-6\">Start Date: {\" \"} {position.employmentStartDate}</p></motion.li>\r\n  <motion.li variants={item} > <p className=\"block font-bold text-white  text-lg mb-2 py-6\">End Date: {\" \"} {position.employmentEndDate}</p></motion.li>\r\n  </div>\r\n  </div>\r\n  </motion.ul>\r\n))}\r\n     \r\n    </div>\r\n    <div className=\"w-full max-w-sm bg-gradient-to-br from-teal-400 to black shadow-lg rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 px-4 py-2 mx-0 my-4 hover:shadow-xl transition duration-300 ease-in-out  hover:translate-x-1\">\r\n      <p className=\" block text-gray-700 font-bold text-lg mb-2 py-6\">Additional Notes: {data.jobappnote.body}</p>\r\n      </div>\r\n      <hr className=\"my-4\" />\r\n      <Form method=\"post\">\r\n        <button\r\n          type=\"submit\"\r\n          className=\"rounded bg-custom-newColor  py-2 px-4 text-white font-bold hover:bg-custom-spaceBlack focus:bg-custom-spaceBlack\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function ErrorBoundary({ error }: { error: Error }) {\r\n  console.error(error);\r\n\r\n  return <div>An unexpected error occurred: {error.message}</div>;\r\n}\r\n\r\nexport function CatchBoundary() {\r\n  const caught = useCatch();\r\n\r\n  if (caught.status === 404) {\r\n    return <div>Note not found</div>;\r\n  }\r\n\r\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\r\n}\r\n", "import { Link } from \"@remix-run/react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport default function jobNoteIndexPage() {\r\n\r\n  return (\r\n    <motion.div\r\n    initial={{ opacity: 0, x: '-2vh' }}\r\n    animate={{ opacity: 1, x: 0 }}\r\n    transition={{ duration: 0.5 }}\r\n>\r\n    <p className =\"text-xl\">\r\n      No note selected. Select a note on the left, or{\" \"}\r\n      <Link to=\"new\" className=\"text-custom-newColor font-medium underline\">\r\n        create a new job application note.\r\n      </Link>\r\n    </p>\r\n    </motion.div>\r\n  );\r\n}\r\n", "import type { ActionFunction } from \"@remix-run/node\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport { Form, useActionData } from \"@remix-run/react\";\r\nimport React, { useState } from \"react\";\r\nimport { createJobAppNote } from \"~/models/jobapp.server\";\r\nimport { requireUserId } from \"~/session.server\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { motion } from \"framer-motion\";\r\n\r\ntype ActionData = {\r\n  errors?: {\r\n    title?: string;\r\n    yourName?: string;\r\n    phoneNumber?: string;\r\n    DesiredSalary?: string;\r\n    referenceOne?: string;\r\n    referenceTwo?: string;\r\n    referenceThree?: string;\r\n    body?: string;\r\n    positionTitle?: string;\r\n    duties?: string;\r\n    employerName?: string;\r\n    address?: string;\r\n    employmentStartDate?: string;\r\n    employmentEndDate?: string;\r\n  };\r\n};\r\n\r\ninterface PreviousPosition {\r\n  id: string;\r\n  positionTitle: string;\r\n  duties: string;\r\n  employerName: string;\r\n  address: string;\r\n  employmentStartDate: string;\r\n  employmentEndDate: string;\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const userId = await requireUserId(request);\r\n\r\n  const formData = await request.formData();\r\n\r\n  const title = formData.get(\"title\");\r\n  const yourName = formData.get(\"yourName\");\r\n  const phoneNumber = formData.get(\"phoneNumber\");\r\n  const DesiredSalary = formData.get(\"DesiredSalary\");\r\n  const referenceOne = formData.get(\"referenceOne\");\r\n  const referenceTwo = formData.get(\"referenceTwo\");\r\n  const referenceThree = formData.get(\"referenceThree\");\r\n  const body = formData.get(\"body\");\r\n\r\n  const previousPositions: PreviousPosition[] = [];\r\n\r\nfor (let i = 0; formData.get(`positionTitle_${i}`); i++) {\r\n  const positionTitle = formData.get(`positionTitle_${i}`)?.toString().trim() as string;\r\n  const duties = formData.get(`duties_${i}`)?.toString().trim() as string;\r\n  const employerName = formData.get(`employerName_${i}`)?.toString().trim() as string;\r\n  const address = formData.get(`address_${i}`)?.toString().trim() as string;\r\n  const employmentStartDate = formData.get(`employmentStartDate_${i}`)?.toString().trim() as string;\r\n  const employmentEndDate = formData.get(`employmentEndDate_${i}`)?.toString().trim() as string;\r\n\r\n  if (typeof positionTitle !== \"string\" || positionTitle.trim().length === 0) {\r\n    return json<ActionData>(\r\n      { errors: { [`positionTitle_${i}`]: \"Position Title is required\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (typeof duties !== \"string\" || duties.trim().length === 0) {\r\n    return json<ActionData>(\r\n      { errors: { [`duties_${i}`]: \"Duties is required\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (typeof employerName !== \"string\" || employerName.trim().length === 0) {\r\n    return json<ActionData>(\r\n      { errors: { [`employerName_${i}`]: \"Employer Name is required\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (typeof address !== \"string\" || address.trim().length === 0) {\r\n    return json<ActionData>(\r\n      { errors: { [`address_${i}`]: \"Address is required\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (typeof employmentStartDate !== \"string\" || employmentStartDate.trim().length === 0) {\r\n    return json<ActionData>(\r\n      { errors: { [`employmentStartDate_${i}`]: \"Employment Start Date is required\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (typeof employmentEndDate !== \"string\" || employmentEndDate.trim().length === 0) {\r\n    return json<ActionData>(\r\n      { errors: { [`employmentEndDate_${i}`]: \"Employment End Date is required\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  previousPositions.push({\r\n    id: uuidv4(),\r\n    positionTitle,\r\n    duties,\r\n    employerName,\r\n    address,\r\n    employmentStartDate,\r\n    employmentEndDate,\r\n  });\r\n}\r\n\r\n  if (typeof title !== \"string\" || title.length === 0) {\r\n    return json<ActionData>(\r\n      { errors: { title: \"Title is required\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (typeof body !== \"string\" || body.length === 0) {\r\n    return json<ActionData>(\r\n      { errors: { body: \"Body is required\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (typeof title !== \"string\" || title.length === 0) {\r\n    return json<ActionData>(\r\n      { errors: { title: \"Title is required\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (typeof yourName !== \"string\" || yourName.length === 0) {\r\n    return json<ActionData>(\r\n      { errors: { yourName: \"your Name is required\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (typeof phoneNumber !== \"string\" || phoneNumber.length === 0) {\r\n    return json<ActionData>(\r\n      { errors: { phoneNumber: \"Phone Number is required\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (typeof DesiredSalary !== \"string\" || DesiredSalary.length === 0) {\r\n    return json<ActionData>(\r\n      { errors: { DesiredSalary: \"Body is required\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (typeof referenceOne !== \"string\" || referenceOne.length === 0) {\r\n    return json<ActionData>(\r\n      { errors: { referenceOne: \"reference 1  is required\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (typeof referenceTwo !== \"string\" || referenceTwo.length === 0) {\r\n    return json<ActionData>(\r\n      { errors: { referenceTwo: \"reference 2  is required\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (typeof referenceThree !== \"string\" || referenceThree.length === 0) {\r\n    return json<ActionData>(\r\n      { errors: { referenceThree: \"reference  is required\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  const jobnote = await createJobAppNote({\r\n    title,\r\n    yourName,\r\n    phoneNumber,\r\n    DesiredSalary,\r\n    referenceOne,\r\n    referenceTwo,\r\n    referenceThree,\r\n    body,\r\n    userId,\r\n    previousPositions,\r\n  });\r\n\r\n  return redirect(`/jobappnotes/${jobnote.id}`);\r\n};\r\n\r\nexport default function NewJobAppPage() {\r\n  const actionData = useActionData() as ActionData;\r\n  const titleRef = React.useRef<HTMLInputElement>(null);\r\n  const yourNameRef = React.useRef<HTMLInputElement>(null);\r\n  const phoneRef = React.useRef<HTMLInputElement>(null);\r\n  const desiredSalaryRef = React.useRef<HTMLInputElement>(null);\r\n  const referenceOneRef = React.useRef<HTMLInputElement>(null);\r\n  const referenceTwoRef = React.useRef<HTMLInputElement>(null);\r\n  const referenceThreeRef = React.useRef<HTMLInputElement>(null);\r\n  const bodyRef = React.useRef<HTMLTextAreaElement>(null);\r\n  const positionTitleRef = React.useRef<HTMLTextAreaElement>(null);\r\n  const dutiesRef = React.useRef<HTMLTextAreaElement>(null);\r\n  const employerNameRef = React.useRef<HTMLTextAreaElement>(null);\r\n  const addressRef = React.useRef<HTMLTextAreaElement>(null);\r\n  const employmentStartDateRef = React.useRef<HTMLTextAreaElement>(null);\r\n  const employmentEndDateRef = React.useRef<HTMLTextAreaElement>(null);\r\n  React.useEffect(() => {\r\n    if (actionData?.errors?.title) {\r\n      titleRef.current?.focus();\r\n    } else if (actionData?.errors?.body) {\r\n      bodyRef.current?.focus();\r\n    } else if (actionData?.errors?.yourName) {\r\n      yourNameRef.current?.focus();\r\n    } else if (actionData?.errors?.phoneNumber) {\r\n      phoneRef.current?.focus();\r\n    } else if (actionData?.errors?.DesiredSalary) {\r\n      desiredSalaryRef.current?.focus();\r\n    } else if (actionData?.errors?.referenceOne) {\r\n      referenceOneRef.current?.focus();\r\n    } else if (actionData?.errors?.referenceTwo) {\r\n      referenceTwoRef.current?.focus();\r\n    } else if (actionData?.errors?.referenceThree) {\r\n      referenceThreeRef.current?.focus();\r\n    } else if (actionData?.errors?.positionTitle) {\r\n      positionTitleRef.current?.focus();\r\n    } else if (actionData?.errors?.duties) {\r\n      dutiesRef.current?.focus();\r\n    } else if (actionData?.errors?.employerName) {\r\n      employerNameRef.current?.focus();\r\n    } else if (actionData?.errors?.address) {\r\n      addressRef.current?.focus();\r\n    } else if (actionData?.errors?.employmentStartDate) {\r\n      employmentStartDateRef.current?.focus();\r\n    } else if (actionData?.errors?.employmentEndDate) {\r\n      employmentEndDateRef.current?.focus();\r\n    }\r\n  }, [actionData]);\r\n\r\n  const [previousPositions, setPreviousPositions] = useState<\r\n    PreviousPosition[]\r\n  >([\r\n    {\r\n      id: uuidv4(),\r\n      positionTitle: \"\",\r\n      duties: \"\",\r\n      employerName: \"\",\r\n      address: \"\",\r\n      employmentStartDate: \"\",\r\n      employmentEndDate: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleAddPreviousPosition = () => {\r\n    const newPreviousPosition = {\r\n      id: uuidv4(),\r\n      positionTitle: \"\",\r\n      duties: \"\",\r\n      employerName: \"\",\r\n      address: \"\",\r\n      employmentStartDate: \"\",\r\n      employmentEndDate: \"\",\r\n    };\r\n\r\n    if (previousPositions.length === 1 && !previousPositions[0].id) {\r\n      setPreviousPositions([newPreviousPosition]);\r\n    } else {\r\n      setPreviousPositions([...previousPositions, newPreviousPosition]);\r\n    }\r\n  };\r\n\r\n  const handleRemovePreviousPosition = (index: number) => {\r\n    setPreviousPositions(previousPositions.filter((_, i) => i !== index));\r\n  };\r\n\r\n  function handleChangePreviousPosition(\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    index: number,\r\n    field: keyof PreviousPosition\r\n  ) {\r\n    const newValue = event.target.value;\r\n    setPreviousPositions((prevPositions) => {\r\n      const newPositions = [...prevPositions];\r\n      newPositions[index] = {\r\n        ...newPositions[index],\r\n        [field]: newValue,\r\n      };\r\n      return newPositions;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n    initial={{ opacity: 0, x: '-2vh' }}\r\n    animate={{ opacity: 1, x: 0 }}\r\n    transition={{ duration: 0.5 }}\r\n>\r\n    <Form\r\n      method=\"post\"\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        gap: 8,\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <div>\r\n        <label className=\"flex w-full flex-col gap-1 block text-gray-700 font-bold mb-2\">\r\n          <span className =\"mb-2\">Job Application Loadout Title: </span>\r\n          <input\r\n            ref={titleRef}\r\n            name=\"title\"\r\n            className=\"flex-1 shadow appearance-none border rounded border-custom-newColor w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            aria-invalid={actionData?.errors?.title ? true : undefined}\r\n            aria-errormessage={\r\n              actionData?.errors?.title ? \"title-error\" : undefined\r\n            }\r\n          />\r\n        </label>\r\n        {actionData?.errors?.title && (\r\n          <div className=\"pt-1 text-red-700\" id=\"title-error\">\r\n            {actionData.errors.title}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"flex w-full flex-col gap-1 block text-gray-700 font-bold mb-2\">\r\n          <span className =\"mb-2\">Name: </span>\r\n          <input\r\n            ref={yourNameRef}\r\n            name=\"yourName\"\r\n            className=\"flex-1 shadow appearance-none border rounded border-custom-newColor w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            aria-invalid={actionData?.errors?.yourName ? true : undefined}\r\n            aria-errormessage={\r\n              actionData?.errors?.yourName ? \"title-error\" : undefined\r\n            }\r\n          />\r\n        </label>\r\n        {actionData?.errors?.yourName && (\r\n          <div className=\"pt-1 text-red-700\" id=\"title-error\">\r\n            {actionData.errors.yourName}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"flex w-full flex-col gap-1 block text-gray-700 font-bold mb-2\">\r\n          <span className =\"mb-2\">Cell Phone Number: </span>\r\n          <input\r\n            ref={phoneRef}\r\n            name=\"phoneNumber\"\r\n            className=\"flex-1 shadow appearance-none border rounded border-custom-newColor w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            aria-invalid={actionData?.errors?.phoneNumber ? true : undefined}\r\n            aria-errormessage={\r\n              actionData?.errors?.phoneNumber ? \"title-error\" : undefined\r\n            }\r\n          />\r\n        </label>\r\n        {actionData?.errors?.phoneNumber && (\r\n          <div className=\"pt-1 text-red-700\" id=\"title-error\">\r\n            {actionData.errors.phoneNumber}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"flex w-full flex-col gap-1 block text-gray-700 font-bold mb-2\">\r\n          <span className =\"mb-2\">Desired Salary: </span>\r\n          <input\r\n            ref={desiredSalaryRef}\r\n            name=\"DesiredSalary\"\r\n            className=\"flex-1 shadow appearance-none border rounded border-custom-newColor w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            aria-invalid={actionData?.errors?.DesiredSalary ? true : undefined}\r\n            aria-errormessage={\r\n              actionData?.errors?.DesiredSalary ? \"title-error\" : undefined\r\n            }\r\n          />\r\n        </label>\r\n        {actionData?.errors?.DesiredSalary && (\r\n          <div className=\"pt-1 text-red-700\" id=\"title-error\">\r\n            {actionData.errors.DesiredSalary}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"flex w-full flex-col gap-1 block text-gray-700 font-bold mb-2\">\r\n          <span className =\"mb-2\">Reference 1: </span>\r\n          <input\r\n            ref={referenceOneRef}\r\n            name=\"referenceOne\"\r\n            className=\"flex-1 shadow appearance-none border rounded border-custom-newColor w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            aria-invalid={actionData?.errors?.referenceOne ? true : undefined}\r\n            aria-errormessage={\r\n              actionData?.errors?.referenceOne ? \"title-error\" : undefined\r\n            }\r\n          />\r\n        </label>\r\n        {actionData?.errors?.referenceOne && (\r\n          <div className=\"pt-1 text-red-700\" id=\"title-error\">\r\n            {actionData.errors.referenceOne}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"flex w-full flex-col gap-1 block text-gray-700 font-bold mb-2\">\r\n          <span  className =\"mb-2\">Reference 2: </span>\r\n          <input\r\n            ref={referenceTwoRef}\r\n            name=\"referenceTwo\"\r\n            className=\"flex-1 shadow appearance-none border rounded border-custom-newColor w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            aria-invalid={actionData?.errors?.referenceTwo ? true : undefined}\r\n            aria-errormessage={\r\n              actionData?.errors?.referenceTwo ? \"title-error\" : undefined\r\n            }\r\n          />\r\n        </label>\r\n        {actionData?.errors?.referenceTwo && (\r\n          <div className=\"pt-1 text-red-700\" id=\"title-error\">\r\n            {actionData.errors.referenceTwo}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"flex w-full flex-col gap-1 block text-gray-700 font-bold mb-2\">\r\n          <span  className =\"mb-2\">Reference 3: </span>\r\n          <input\r\n            ref={referenceThreeRef}\r\n            name=\"referenceThree\"\r\n            className=\"flex-1 shadow appearance-none border rounded border-custom-newColor w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            aria-invalid={actionData?.errors?.referenceThree ? true : undefined}\r\n            aria-errormessage={\r\n              actionData?.errors?.referenceThree ? \"title-error\" : undefined\r\n            }\r\n          />\r\n        </label>\r\n        {actionData?.errors?.referenceThree && (\r\n          <div className=\"pt-1 text-red-700\" id=\"title-error\">\r\n            {actionData.errors.referenceThree}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"space-y-4\">\r\n        {previousPositions.map((position, index) => (\r\n          <div key={position.id}>\r\n            <label\r\n              className=\"flex w-full flex-col gap-1 block text-gray-700 font-bold mb-2\"\r\n              htmlFor={`positionTitle_${index}`}\r\n            >\r\n             <span  className =\"mb-2\"> Position Title</span>\r\n              <input\r\n                className=\"flex-1 shadow appearance-none border rounded border-custom-newColor w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                type=\"text\"\r\n                name={`positionTitle_${index}`}\r\n                id={`positionTitle_${index}`}\r\n                value={position.positionTitle}\r\n                onChange={(event) =>\r\n                  handleChangePreviousPosition(event, index, \"positionTitle\")\r\n                }\r\n                aria-invalid={\r\n                  actionData?.errors?.positionTitle ? true : undefined\r\n                }\r\n                aria-errormessage={\r\n                  actionData?.errors?.positionTitle ? \"title-error\" : undefined\r\n                }\r\n              />\r\n            </label>\r\n            {actionData?.errors?.positionTitle && (\r\n              <div className=\"pt-1 text-red-700\" id=\"title-error\">\r\n                {actionData.errors.positionTitle}\r\n              </div>\r\n            )}\r\n            <div className=\"my-2\">\r\n              <label\r\n                className=\"flex w-full flex-col gap-1 block text-gray-700 font-bold mb-2\"\r\n                htmlFor={`duties_${index}`}\r\n              ><span  className =\"mb-2\">\r\n                Duties</span>\r\n                <textarea\r\n                  className=\"flex-1 shadow appearance-none border rounded border-custom-newColor w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                  name={`duties_${index}`}\r\n                  id={`duties_${index}`}\r\n                  value={position.duties}\r\n                  placeholder = \"Enter your job duties here...\"\r\n                  onChange={(event) =>\r\n                    handleChangePreviousPosition(event, index, \"duties\")\r\n                  }\r\n                  aria-invalid={actionData?.errors?.duties ? true : undefined}\r\n                  aria-errormessage={\r\n                    actionData?.errors?.duties ? \"title-error\" : undefined\r\n                  }\r\n                />\r\n              </label>\r\n              {actionData?.errors?.duties && (\r\n                <div className=\"pt-1 text-red-700\" id=\"title-error\">\r\n                  {actionData.errors.duties}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"my-2\">\r\n              <label\r\n                className=\"flex w-full flex-col gap-1 block text-gray-700 font-bold mb-2\"\r\n                htmlFor={`employerName_${index}`}\r\n              ><span  className =\"mb-2\">\r\n                Employer Name </span>\r\n                <input\r\n                  className=\"flex-1 shadow appearance-none border rounded border-custom-newColor w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                  type=\"text\"\r\n                  name={`employerName_${index}`}\r\n                  id={`employerName_${index}`}\r\n                  value={position.employerName}\r\n                  onChange={(event) =>\r\n                    handleChangePreviousPosition(event, index, \"employerName\")\r\n                  }\r\n                  aria-invalid={\r\n                    actionData?.errors?.employerName ? true : undefined\r\n                  }\r\n                  aria-errormessage={\r\n                    actionData?.errors?.employerName ? \"title-error\" : undefined\r\n                  }\r\n                />\r\n              </label>\r\n              {actionData?.errors?.employerName && (\r\n                <div className=\"pt-1 text-red-700\" id=\"title-error\">\r\n                  {actionData.errors.employerName}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"my-2\">\r\n              <label\r\n                className=\"flex w-full flex-col gap-1 block text-gray-700 font-bold mb-2\"\r\n                htmlFor={`address_${index}`}\r\n              ><span  className =\"mb-2\">\r\n               Employer Address </span>\r\n                <input\r\n                  className=\" flex-1 shadow appearance-none border rounded border-custom-newColor w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                  type=\"text\"\r\n                  name={`address_${index}`}\r\n                  id={`address_${index}`}\r\n                  value={position.address}\r\n                  onChange={(event) =>\r\n                    handleChangePreviousPosition(event, index, \"address\")\r\n                  }\r\n                  aria-invalid={actionData?.errors?.address ? true : undefined}\r\n                  aria-errormessage={\r\n                    actionData?.errors?.address ? \"title-error\" : undefined\r\n                  }\r\n                />\r\n              </label>\r\n              {actionData?.errors?.address && (\r\n                <div className=\"pt-1 text-red-700\" id=\"title-error\">\r\n                  {actionData.errors.address}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"my-2\">\r\n              <label\r\n                className=\"flex w-full flex-col gap-1 block text-gray-700 font-bold mb-2\"\r\n                htmlFor={`employmentStartDate_${index}`}\r\n              > <span  className =\"mb-2\">\r\n                Employment Start Date</span>\r\n                <input\r\n                  className=\"flex-1 shadow appearance-none border rounded border-custom-newColor w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                  type=\"Date\"\r\n                  name={`employmentStartDate_${index}`}\r\n                  id={`employmentStartDate_${index}`}\r\n                  value={position.employmentStartDate}\r\n                  onChange={(event) =>\r\n                    handleChangePreviousPosition(\r\n                      event,\r\n                      index,\r\n                      \"employmentStartDate\"\r\n                    )\r\n                  }\r\n                  aria-invalid={\r\n                    actionData?.errors?.employmentStartDate ? true : undefined\r\n                  }\r\n                  aria-errormessage={\r\n                    actionData?.errors?.employmentStartDate\r\n                      ? \"title-error\"\r\n                      : undefined\r\n                  }\r\n                />\r\n              </label>\r\n              {actionData?.errors?.employmentStartDate && (\r\n                <div className=\"pt-1 text-red-700\" id=\"title-error\">\r\n                  {actionData.errors.employmentStartDate}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"my-2\">\r\n              <label\r\n                className=\"flex w-full flex-col gap-1 block text-gray-700 font-bold mb-2\"\r\n                htmlFor={`employmentEndDate_${index}`}\r\n              ><span className =\"mb-2\">\r\n                Employment End Date</span>\r\n                <input\r\n                  className=\"flex-1 shadow appearance-none border rounded border-custom-newColor w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                  type=\"Date\"\r\n                  name={`employmentEndDate_${index}`}\r\n                  id={`employmentEndDate_${index}`}\r\n                  value={position.employmentEndDate}\r\n                  onChange={(event) =>\r\n                    handleChangePreviousPosition(\r\n                      event,\r\n                      index,\r\n                      \"employmentEndDate\"\r\n                    )\r\n                  }\r\n                  aria-invalid={\r\n                    actionData?.errors?.employmentEndDate ? true : undefined\r\n                  }\r\n                  aria-errormessage={\r\n                    actionData?.errors?.employmentEndDate\r\n                      ? \"title-error\"\r\n                      : undefined\r\n                  }\r\n                />\r\n              </label>\r\n              {actionData?.errors?.employmentEndDate && (\r\n                <div className=\"pt-1 text-red-700\" id=\"title-error\">\r\n                  {actionData.errors.employmentEndDate}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <button\r\n              className=\"rounded bg-teal-400 py-2 font-bold px-4 my-4 text-white hover:bg-custom-newColor focus:bg-blue-400\"\r\n              type=\"button\"\r\n              onClick={() => handleRemovePreviousPosition(index)}\r\n            >\r\n              Remove\r\n            </button>\r\n          </div>\r\n        ))}\r\n        <button\r\n          className=\"rounded bg-teal-400  font-bold py-2 px-4 my-4 text-white hover:bg-custom-newColor \r\n          focus:bg-blue-400\"\r\n          type=\"button\"\r\n          onClick={handleAddPreviousPosition}\r\n        >\r\n          Add Position\r\n        </button>\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"flex w-full flex-col gap-1 block text-gray-700 font-bold mb-2\">\r\n          <span>Additional Notes: </span>\r\n          <textarea\r\n            ref={bodyRef}\r\n            name=\"body\"\r\n            rows={8}\r\n            className=\"w-full flex-1 rounded-md border-2 border-custom-newColor py-2 px-3 text-lg leading-6\"\r\n            placeholder = \"Enter any additional notes you may have here...\"\r\n            aria-invalid={actionData?.errors?.body ? true : undefined}\r\n            aria-errormessage={\r\n              actionData?.errors?.body ? \"body-error\" : undefined\r\n            }\r\n          />\r\n        </label>\r\n        {actionData?.errors?.body && (\r\n          <div className=\"pt-1 text-red-700\" id=\"body-error\">\r\n            {actionData.errors.body}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"text-right my-14\">\r\n        <button\r\n          type=\"submit\"\r\n          className=\"rounded bg-teal-400 font-bold py-2 px-4 text-white hover:bg-custom-newColor focus:bg-custom-newColor\"\r\n        >\r\n          Save\r\n        </button>\r\n      </div>\r\n      </Form>\r\n    </motion.div>\r\n  );\r\n}\r\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useCatch, useLoaderData } from \"@remix-run/react\";\nimport invariant from \"tiny-invariant\";\nimport { motion } from \"framer-motion\";\nimport type { Note } from \"~/models/note.server\";\nimport { deleteNote } from \"~/models/note.server\";\nimport { getNote } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\n\ntype LoaderData = {\n  note: Note;\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const userId = await requireUserId(request);\n  invariant(params.noteId, \"noteId not found\");\n\n  const note = await getNote({ userId, id: params.noteId });\n  if (!note) {\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n  return json<LoaderData>({ note });\n};\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  const userId = await requireUserId(request);\n  invariant(params.noteId, \"noteId not found\");\n\n  await deleteNote({ userId, id: params.noteId });\n\n  return redirect(\"/notes\");\n};\n\nexport default function NoteDetailsPage() {\n  const data = useLoaderData() as unknown as LoaderData;\n\n  const container = {\n    hidden: { opacity: 0 },\n    show: {\n      opacity: 1,\n      transition: {\n        delayChildren: 0.5,\n      },\n    },\n  };\n\n  const item = {\n    hidden: { opacity: 0 },\n    show: { opacity: 1 },\n  };\n\n  return (\n    <div>\n      <motion.ul variants={container} initial=\"hidden\" animate=\"show\">\n        <div className=\"bg-custom-newColor mx-0 my-4  w-full  max-w-sm rounded-lg border border-gray-200 px-4 py-2 shadow shadow-lg transition duration-300 ease-in-out hover:translate-x-1 hover:shadow-xl dark:border-gray-700 dark:bg-gray-800\">\n          <motion.li variants={item}>\n            <h2 className=\"mb-2 block py-6 text-xl  font-bold text-white  \">\n              {data.note.title}\n            </h2>\n          </motion.li>\n          <motion.li variants={item}>\n            <p className=\"mb-2 block py-6  text-lg font-bold text-white\">\n              {data.note.body}\n            </p>\n          </motion.li>\n        </div>\n        <hr className=\"my-4\" />\n        <Form method=\"post\">\n          <button\n            type=\"submit\"\n            className=\"hover:bg-custom-newColor focus:bg-custom-newColor  rounded bg-teal-400 px-4 py-2 font-bold text-white\"\n          >\n            Delete\n          </button>\n        </Form>\n      </motion.ul>\n    </div>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return <div>An unexpected error occurred: {error.message}</div>;\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return <div>Note not found</div>;\n  }\n\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n", "import { Link } from \"@remix-run/react\";\nimport { motion } from \"framer-motion\";\n\nexport default function NoteIndexPage() {\n  return (\n    <>\n      <motion.div\n        initial={{ opacity: 0, x: \"-2vh\" }}\n        animate={{ opacity: 1, x: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <p className=\"text-xl\">\n          No note selected. Select a note on the left, or{\" \"}\n          <Link to=\"new\" className=\"text-custom-newColor font-bold underline\">\n            create a new note.\n          </Link>\n        </p>\n        <div></div>\n      </motion.div>\n    </>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { createNote } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\nimport { motion } from \"framer-motion\";\n\ntype ActionData = {\n  errors?: {\n    title?: string;\n    body?: string;\n  };\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const userId = await requireUserId(request);\n\n  const formData = await request.formData();\n  const title = formData.get(\"title\");\n  const body = formData.get(\"body\");\n\n  if (typeof title !== \"string\" || title.length === 0) {\n    return json<ActionData>(\n      { errors: { title: \"Title is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof body !== \"string\" || body.length === 0) {\n    return json<ActionData>(\n      { errors: { body: \"Body is required\" } },\n      { status: 400 }\n    );\n  }\n\n  const note = await createNote({ title, body, userId });\n\n  return redirect(`/notes/${note.id}`);\n};\n\nexport default function NewNotePage() {\n  const actionData = useActionData() as ActionData;\n  const titleRef = React.useRef<HTMLInputElement>(null);\n  const bodyRef = React.useRef<HTMLTextAreaElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.title) {\n      titleRef.current?.focus();\n    } else if (actionData?.errors?.body) {\n      bodyRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, x: \"-2vh\" }}\n      animate={{ opacity: 1, x: 0 }}\n      transition={{ duration: 0.5 }}\n    >\n      <Form\n        method=\"post\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: 8,\n          width: \"100%\",\n        }}\n      >\n        <div>\n          <label className=\"mb-2 block flex w-full flex-col gap-1 font-bold text-gray-700\">\n            <span>Title: </span>\n            <input\n              ref={titleRef}\n              name=\"title\"\n              className=\"border-custom-newColor focus:shadow-outline w-full flex-1 appearance-none rounded border px-3 py-2 leading-tight text-gray-700 shadow focus:outline-none\"\n              aria-invalid={actionData?.errors?.title ? true : undefined}\n              aria-errormessage={\n                actionData?.errors?.title ? \"title-error\" : undefined\n              }\n            />\n          </label>\n          {actionData?.errors?.title && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.title}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <label className=\"mb-2 block flex w-full flex-col gap-1 font-bold text-gray-700\">\n            <span>Body: </span>\n            <textarea\n              ref={bodyRef}\n              name=\"body\"\n              rows={8}\n              className=\"border-custom-newColor focus:shadow-outline w-full flex-1 appearance-none rounded border px-3 py-2 leading-tight text-gray-700 shadow focus:outline-none\"\n              aria-invalid={actionData?.errors?.body ? true : undefined}\n              aria-errormessage={\n                actionData?.errors?.body ? \"body-error\" : undefined\n              }\n            />\n          </label>\n          {actionData?.errors?.body && (\n            <div className=\"pt-1 text-red-700\" id=\"body-error\">\n              {actionData.errors.body}\n            </div>\n          )}\n        </div>\n\n        <div className=\"text-right\">\n          <button\n            type=\"submit\"\n            className=\"bg-custom-newColor focus:bg--teal-400 rounded px-4 py-2 font-bold text-white hover:bg-teal-400\"\n          >\n            Save\n          </button>\n        </div>\n      </Form>\n    </motion.div>\n  );\n}\n", "import { marked } from \"marked\";\nimport { Link, Form } from \"@remix-run/react\";\nimport { useUser } from \"~/utils\";\nimport type { LoaderFunction } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { useOptionalUser } from \"~/utils\";\nimport { json } from \"@remix-run/node\";\nimport { getPost } from \"~/models/post.server\";\nimport invariant from \"tiny-invariant\";\n\ntype LoaderData = {\n  title: string;\nslug: string;\n  newDate: string;\n  address: string;\n  html: string;\n  jobAppLink: string;\n  appStatus: string | null;\n};\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  const { slug } = params;\n  invariant(slug, \"slug is required\");\n  const post = await getPost(slug);\n  invariant(post, `post not found: ${slug}`);\n  const html = marked(post.markdown);\n  const date = post.date;\n  const formattedDate = date.split(\"-\");\n  const newDate =\n    formattedDate[1] + \"-\" + formattedDate[2] + \"-\" + formattedDate[0];\n  return json<LoaderData>({\n    title: post.title,\n    slug:post.slug,\n    newDate,\n    address: post.address,\n    html,\n    jobAppLink: post.jobAppLink,\n    appStatus: post.appStatus,\n  });\n};\n\nexport default function PostsRoute() {\n  const user = useOptionalUser();\n  const username = useUser();\n  const { title, slug,  newDate, address, html, jobAppLink, appStatus } =\n    useLoaderData() as LoaderData;\n    const jobTitle =slug.split(\"-\")[0];\n  return (\n    <main className=\" flex h-full min-h-screen flex-col\">\n      <header className=\"flex flex-col items-center justify-between bg-teal-400 p-4 text-white md:flex-row\">\n        <h1 className=\"mb-4 text-3xl font-bold md:mb-0\">\n          <Link to=\".\">Post</Link>\n          {`${\" \"}`}\n          {title}\n        </h1>\n        <button className=\"sm:hidden\">\n          {\" \"}\n          {user ? (\n            <Link\n              to=\"/notes\"\n              className=\"mb-4 flex items-center justify-center rounded-md border border-transparent bg-white px-4  py-3 text-base font-medium text-black shadow-sm hover:bg-black hover:text-white sm:px-8 md:mb-0\"\n            >\n              View Notes\n            </Link>\n          ) : null}\n        </button>\n        <button className=\"sm:hidden\">\n          {user ? (\n            <Link\n              to=\"/posts\"\n              className=\"mb-4 flex items-center justify-center rounded-md border border-transparent bg-white px-4  py-3 text-base font-medium text-black shadow-sm hover:bg-black hover:text-white sm:px-8 md:mb-0\"\n            >\n              View Posts\n            </Link>\n          ) : null}\n        </button>\n        <Form action=\"/logout\" method=\"post\">\n          <button\n            type=\"submit\"\n            className=\"m-2 rounded bg-white px-4 py-2 font-medium text-black hover:bg-black hover:text-white active:bg-black\"\n          >\n            Logout\n          </button>\n        </Form>\n        <p>{username.email}</p>\n      </header>\n      <div className=\"bg-custom-newColor dark mx-auto  max-w-2xl rounded-lg\">\n        <div className=\" p-6 text-center font-bold text-white\">\n          <article>\n            <h1 className=\"my-6 border-b-2 text-center text-3xl font-bold\">\n              {title}\n            </h1>\n            <p className=\"my-6  text-center text-2xl font-bold text-blue-400\">\n              Job Title: {`${\" \"}`}\n             {jobTitle}\n            </p>\n            <p className=\"my-6  text-center text-2xl font-bold text-blue-400\">\n              Date Applied: {`${\" \"}`}\n              {`${newDate}`}\n            </p>\n            <p className=\"text-lg my-6 text-center font-bold text-blue-300\">\n              Status: {`${\" \"}`}\n              {`${appStatus}`}\n            </p>\n            <p className=\"my-6 text-center text-xl font-bold text-blue-200\">\n              Address: {`${\" \"}`}\n              {`${address}`}\n            </p>\n\n            <a\n              href={`${jobAppLink}`}\n              className=\"my-6 text-center text-lg font-bold  text-white\"\n              target=\"_blank\"\n            >\n              Go to Application Website {`${\" \"}`}\n            </a>\n            <p className=\"mt-4 \">\n              <div\n                className=\"prose lg:prose-xl text-blue-300\"\n                dangerouslySetInnerHTML={{ __html: html }}\n              />\n            </p>\n          </article>\n        </div>\n      </div>\n    </main>\n  );\n}\n", "import { Form, Link, Outlet, useLoaderData } from \"@remix-run/react\";\nimport type { LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\n\nimport { adminGetPostListings } from \"~/models/post.server\";\nimport { requireAdminUser } from \"~/session.server\";\nimport { useUser } from \"~/utils\";\n\ntype LoaderData = {\n  posts: Awaited<ReturnType<typeof adminGetPostListings>>;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  await requireAdminUser(request);\n  return json<LoaderData>({ posts: await adminGetPostListings() });\n};\n\nexport default function AdminRoute() {\n  const username = useUser();\n  const { posts } = useLoaderData() as LoaderData;\n  \n  return (\n    <div className=\"flex h-full min-h-screen flex-col\">\n      <header className=\"flex flex-col md:flex-row items-center justify-between bg-teal-400 p-4 text-white\">\n        <h1 className=\"text-3xl font-bold mb-4 md:mb-0\">\n          <Link to=\".\">Admin</Link>\n        </h1>\n        <button\n          type=\"submit\"\n          className=\"flex items-center justify-center rounded-md border border-transparent mb-4 md:mb-0 bg-white  px-4 py-3 text-base font-medium text-black shadow-sm hover:bg-black hover:text-white sm:px-8\"\n        >\n          <Link to=\"/posts\">\n            Blog Posts\n          </Link>\n        </button>\n        <Form action=\"/logout\" method=\"post\">\n          <button\n            type=\"submit\"\n            className=\"m-2 rounded bg-white py-2 px-4 text-black hover:bg-black active:bg-black hover:text-white font-medium\"\n          >\n            Logout\n          </button>\n        </Form>\n        <p className=\"font-medium\">{username.email}</p>\n      </header>\n\n      <div className=\" my-10 mx-auto max-w-4xl\">\n        <div className=\"flex max-w-lg flex-col space-y-6 font-bold overflow-hidden rounded-lg bg-custom-newColor p-6 text-white shadow-md\">\n          <h1 className=\"my-6 mb-2 border-b-2 text-center text-3xl\">\n            User Posts\n          </h1>\n          <div className=\"grid grid-cols-3 gap-6\">\n        \n              <div className=\"text-white font-medium hover:text-blue-100\">\n                User Posts\n                <div className=\"flex items-start\">\n                  <ol>\n                    {posts.map((post) => (\n                      \n                      <li key={post.slug}>\n                        <div className=\"py-4 text-white\">\n                          <Link\n                            to={post.slug}\n                            className=\"text-white underline hover:text-custom\"\n                          >\n                            {post.title}\n                          </Link>\n                        </div>\n                      </li>\n                    ))}\n                  </ol>\n                </div>\n              </div>\n              <div className=\" ml-12 text-white font-medium hover:text-blue-100\">\n                User Id\n                <div className=\"flex items-center\">\n                  {\" \"}\n                  <ol>\n                    {posts.map((post) => (\n                      <li key={post.slug}>\n                        <div className=\"py-4 text-blue-300\">\n                          <Link\n                            to={post.slug}\n                            className=\"text-white font-medium underline hover:text-custom\"\n                          >\n                            {post.userId}\n                          </Link>\n                        </div>\n                      </li>\n                    ))}\n                  </ol>\n                </div>\n               \n              </div>\n              <main className=\"col-span-4 md:col-span-3\">\n              <Outlet />\n            </main>\n\n            \n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  return (\n    <div className=\"text-red-500\">\n      Oh no, something went wrong!\n      <pre>{error.message}</pre>\n    </div>\n  );\n}\n", "import React, { useState } from \"react\";\nimport {\n  Form,\n  useActionData,\n  useCatch,\n  useLoaderData,\n  useParams,\n  useTransition,\n} from \"@remix-run/react\";\n\nimport { redirect, json } from \"@remix-run/node\";\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport type { Post } from \"~/models/post.server\";\nimport {\n  createPost,\n  deletePost,\n  getPost,\n  updatePost,\n} from \"~/models/post.server\";\n\nimport invariant from \"tiny-invariant\";\nimport { requireAdminUser, requireUserId } from \"~/session.server\";\n\ntype LoaderData = { post?: Post };\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  await requireAdminUser(request);\n  invariant(params.slug, \"slug is required\");\n  if (params.slug === \"new\") {\n    return json<LoaderData>({});\n  }\n  const post = await getPost(params.slug);\n  if (!post) {\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n  return json<LoaderData>({ post });\n};\n\ntype ActionData =\n  | {\n      title: null | string;\n      slug: null | string;\n      address: null | string;\n      date: null | string;\n      coordinateLat: null | string;\n      coordinateLong: null | string;\n      markdown: null | string;\n      jobAppLink: null | string;\n      appStatus: null | string;\n    }\n  | undefined;\n\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  await requireAdminUser(request);\n  invariant(params.slug, \"slug is required\");\n  const formData = await request.formData();\n  const intent = formData.get(\"intent\");\n  const userId = await requireUserId(request);\n  if (intent === \"delete\") {\n    await deletePost(params.slug);\n    return redirect(\"/posts/admin\");\n  }\n\n  const title = formData.get(\"title\");\n\n  const jobTitle = formData.get(\"slug\");\n  const slug = `${jobTitle}-${title}`;\n  const date = formData.get(\"date\");\n  const address = formData.get(\"address\");\n\n  let coordinateLat = formData.get(\"latitude\");\n  let coordinateLong = formData.get(\"longitude\");\n  const markdown = formData.get(\"markdown\");\n  const jobAppLink = formData.get(\"jobAppLink\");\n\n  const appStatus = formData.get(\"appStatus\");\n\n  const errors: ActionData = {\n    title: title ? null : \"Company Name  is required\",\n    slug: slug ? null : \"Job Title is required\",\n    address: address ? null : \"Company Address is required\",\n    date: date ? null : \"date is required\",\n    jobAppLink: jobAppLink ? null : \"Job Application website link is required\",\n    appStatus: appStatus ? null : \"Application status is required\",\n    coordinateLat: coordinateLat ? null : \"Coordinate latitude is required\",\n    coordinateLong: coordinateLong ? null : \"Coordinate longitude is required\",\n    markdown: markdown ? null : \"Markdown is required\",\n  };\n\n  if (\n    typeof slug !== \"string\" ||\n    /[\\{\\}\\[\\]\\(\\)\\#\\@\\!\\$\\%\\^\\&\\*\\+\\=\\<\\>\\?\\,\\'\\\"\\;\\:\\\\\\/]/g.test(slug)\n  ) {\n    errors.slug = \"Please use alphanumeric characters only\";\n  }\n\n  // return data if we have errors\n\n  const hasErrors = Object.values(errors).some((errorMessage) => errorMessage);\n  if (hasErrors) {\n    return json<ActionData>(errors);\n  }\n\n  invariant(typeof title === \"string\", \"title must be a string\");\n  invariant(typeof slug === \"string\", \"slug must be a string\");\n  invariant(typeof address === \"string\", \"address must be a string\");\n  invariant(typeof date === \"string\", \"date must be a date\");\n  invariant(typeof jobAppLink === \"string\", \"website address must be a string\");\n  invariant(\n    typeof appStatus === \"string\",\n    \"Application status must be a string\"\n  );\n  invariant(\n    typeof coordinateLat === \"string\",\n    \"coordinate latitude must be a number\"\n  );\n  invariant(\n    typeof coordinateLong === \"string\",\n    \"coordinates longitude must be a number\"\n  );\n  invariant(typeof markdown === \"string\", \"markdown must be a string\");\n  invariant(typeof userId === \"string\", \"userId must be a string\");\n\n  if (params.slug === \"new\") {\n    await createPost({ title,\n      slug,\n      address,\n      date,\n      jobAppLink,\n      appStatus,\n      coordinateLat,\n      coordinateLong,\n      markdown,\n      userId, });\n  } else {\n    await updatePost(params.slug, {\n      title,\n      slug,\n      address,\n      date,\n      jobAppLink,\n      appStatus,\n      coordinateLat,\n      coordinateLong,\n      markdown,\n      userId,\n    });\n  }\n\n  return redirect(\"/posts/admin\");\n};\n\nconst inputClassName = `w-full rounded border border-gray-500 px-2 py-1 text-lg text-blue-500`;\n\nexport default function NewPostRoute() {\n  const data = useLoaderData() as LoaderData;\n  const errors = useActionData() as ActionData;\n\n  const transition = useTransition();\n  const isCreating = transition.submission?.formData.get(\"intent\") === \"create\";\n  const isUpdating = transition.submission?.formData.get(\"intent\") === \"update\";\n  const isDeleting = transition.submission?.formData.get(\"intent\") === \"delete\";\n  const isNewPost = !data.post;\n\n  const [address, setAddress] = useState(data.post?.address || \"\");\n  const [latitude, setLatitude] = useState(data.post?.coordinateLat || \"\");\n  const [longitude, setLongitude] = useState(data.post?.coordinateLong || \"\");\n\n  const [statusError, setStatusError] = useState<string>(\"\");\n\n  function handleAddressChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const address = event.target.value;\n    setAddress(address);\n  }\n\n  function handleLatitudeChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const value = event.target.value;\n    setLatitude(value);\n  }\n\n  function handleLongitudeChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const value = event.target.value;\n    setLongitude(value);\n  }\n\n  const container = {\n    hidden: { opacity: 0 },\n    show: {\n      opacity: 1,\n      transition: {\n        delayChildren: 0.5,\n      },\n    },\n  };\n\n  const item = {\n    hidden: { opacity: 0 },\n    show: { opacity: 1 },\n  };\n\n  return (\n    \n\n          <div className=\"mt-4 rounded-xl bg-custom-newColor p-6 text-lg font-bold text-white shadow-lg md:mt-0 md:flex md:w-full md:max-w-none md:flex-col\">\n            <Form method=\"post\" key={data.post?.slug ?? \"new\"}>\n              <p>\n                <label>\n                  Company Name:{\" \"}\n                  {errors?.title ? (\n                    <em className=\"text-red-600\">{errors.title}</em>\n                  ) : null}\n                  <input\n                    type=\"text\"\n                    name=\"title\"\n                    id=\"title\"\n                    className={inputClassName}\n                    defaultValue={data.post?.title}\n                  />\n                </label>\n              </p>\n              <p>\n                <label>\n                  Job Title:{\" \"}\n                  <input\n                    type=\"text\"\n                    name=\"slug\"\n                    id=\"slug\"\n                    className={inputClassName}\n                    defaultValue={data.post?.slug.split(\"-\")[0]} // display only the jobTitle part of the slug on form update/edit\n                  />\n                  {errors?.slug ? (\n                    <em className=\"text-red-600\">{errors.slug}</em>\n                  ) : null}\n                </label>\n              </p>\n\n              <p>\n                <label>\n                  Date Applied:{\" \"}\n                  <input\n                    type=\"date\"\n                    name=\"date\"\n                    id=\"date\"\n                    className={inputClassName}\n                    defaultValue={data.post?.date}\n                    required\n                  />\n                  {errors?.date ? (\n                    <em className=\"text-red-600\">{errors.date}</em>\n                  ) : null}\n                </label>\n              </p>\n              <p>\n                <label>\n                  Job Application Website Link:{\" \"}\n                  <input\n                    type=\"text\"\n                    name=\"jobAppLink\"\n                    id=\"jobAppLink\"\n                    className={inputClassName}\n                    defaultValue={data.post?.jobAppLink}\n                  />\n                  {errors?.jobAppLink ? (\n                    <em className=\"text-red-600\">{errors.jobAppLink}</em>\n                  ) : null}\n                </label>\n              </p>\n              <p>\n                <label>\n                  Company Address:{\" \"}\n                  <input\n                    type=\"text\"\n                    name=\"address\"\n                    id=\"address\"\n                    value={address ?? \"\"}\n                    onChange={handleAddressChange}\n                    className={inputClassName}\n                    defaultValue={data.post?.address}\n                  />\n                  {errors?.address ? (\n                    <em className=\"text-red-600\">{errors.address}</em>\n                  ) : null}\n                </label>\n              </p>\n              <p>\n                <label htmlFor=\"coordinateLat\">\n                  Job Coordinate Latitude:{\" \"}\n                  {errors?.coordinateLat ? (\n                    <em className=\"text-red-600\">{errors.coordinateLat}</em>\n                  ) : null}\n                </label>\n                <input\n                  type=\"number\"\n                  name=\"latitude\"\n                  id=\"latitude\"\n                  value={latitude ?? \"\"}\n                  onChange={handleLatitudeChange}\n                  className={`${inputClassName} font-mono`}\n                  defaultValue={data.post?.coordinateLat}\n                />\n              </p>\n\n              <p>\n                <label htmlFor=\"coordinateLong\">\n                  Job Coordinate Longitude:{\" \"}\n                  {errors?.coordinateLong ? (\n                    <em className=\"text-red-600\">{errors.coordinateLong}</em>\n                  ) : null}\n                </label>\n                <input\n                  type=\"number\"\n                  name=\"longitude\"\n                  id=\"longitude\"\n                  value={longitude ?? \"\"}\n                  onChange={handleLongitudeChange}\n                  className={`${inputClassName} font-mono`}\n                  defaultValue={data.post?.coordinateLong}\n                />\n              </p>\n              <div>\n                Job Application Status\n                <p>\n                  <label>\n                    Applied{\" \"}\n                    <input\n                      type=\"radio\"\n                      name=\"appStatus\"\n                      id=\"applied\"\n                      value=\"Applied\"\n                      defaultChecked={data.post?.appStatus === \"Applied\"}\n                    />\n                  </label>\n                </p>\n                <p>\n                  <label>\n                    Interviewing{\" \"}\n                    <input\n                      type=\"radio\"\n                      name=\"appStatus\"\n                      id=\"interviewing\"\n                      value=\"Interviewing\"\n                      defaultChecked={data.post?.appStatus === \"Interviewing\"}\n                    />\n                  </label>\n                </p>\n                <p>\n                  <label>\n                    Hired{\" \"}\n                    <input\n                      type=\"radio\"\n                      name=\"appStatus\"\n                      id=\"hired\"\n                      value=\"Hired\"\n                      defaultChecked={data.post?.appStatus === \"Hired\"}\n                    />\n                  </label>\n                </p>\n                <p>\n                  <label>\n                    Not Selected{\" \"}\n                    <input\n                      type=\"radio\"\n                      name=\"appStatus\"\n                      id=\"not-selected\"\n                      value=\"Not-selected\"\n                      defaultChecked={data.post?.appStatus === \"Not-selected\"}\n                    />\n                  </label>\n                </p>\n                {errors?.appStatus && (\n                  <p className=\"text-red-500\">{errors.appStatus}</p>\n                )}\n              </div>\n\n              <p>\n                <label htmlFor=\"markdown\">\n                  Details and Notes:{\" \"}\n                  {errors?.markdown ? (\n                    <em className=\"text-red-600\">{errors.markdown}</em>\n                  ) : null}\n                </label>\n                <textarea\n                  id=\"markdown\"\n                  rows={20}\n                  name=\"markdown\"\n                  className={`${inputClassName} font-mono`}\n                  defaultValue={data.post?.markdown}\n                />\n              </p>\n              <div className=\"flex justify-end gap-4\">\n                {isNewPost ? null : (\n                  <button\n                    type=\"submit\"\n                    name=\"intent\"\n                    value=\"delete\"\n                    className=\"rounded bg-red-500 py-2 px-4 text-white hover:bg-red-600 focus:bg-red-400 disabled:bg-red-300\"\n                    disabled={isDeleting}\n                  >\n                    {isDeleting ? \"Deleting...\" : \"Delete\"}\n                  </button>\n                )}\n                <button\n                  type=\"submit\"\n                  name=\"intent\"\n                  value={isNewPost ? \"create\" : \"update\"}\n                  className=\"rounded bg-teal-400 py-2 px-4 text-white hover:bg-custom focus:bg-indigo-900 disabled:bg-gray-300\"\n                  disabled={isCreating || isUpdating}\n                >\n                  {isNewPost\n                    ? isCreating\n                      ? \"Creating...\"\n                      : \"Create Post\"\n                    : null}\n                  {isNewPost ? null : isUpdating ? \"Updating...\" : \"Update\"}\n                </button>\n              </div>\n            </Form>\n          </div>\n      \n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n  const params = useParams();\n  if (caught.status === 404) {\n    return (\n      <div className=\"text-red-500\">\n        Uh oh! The post with the slug \"{params.slug}\" does not exist!\n      </div>\n    );\n  }\n  throw new Error(`Unsupported thrown response status code: ${caught.status}`);\n}\n\nexport function ErrorBoundary({ error }: { error: unknown }) {\n  if (error instanceof Error) {\n    return (\n      <div className=\"text-red-500\">\n        Oh no, something went wrong!\n        <pre>{error.message}</pre>\n      </div>\n    );\n  }\n  return <div className=\"text-red-500\">Oh no, something went wrong!</div>;\n}\n", "\nimport { Link } from \"@remix-run/react\";\n\n\n\n  export default function AdminIndexRoute() {\n    return (\n      <div className=\"flex justify-end\">\n      <p>\n      \n         <Link to=\"new\" className=\"text-white font-medium underline hover:text-custom-spaceBlack font-bold\">\n          Create a New Post\n        </Link>\n      </p>\n      </div>\n    );\n  }", "import { Form, Link, useLoaderData } from \"@remix-run/react\";\nimport type { LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { getPostListings } from \"~/models/post.server\";\nimport { useOptionalAdminUser, useOptionalUser } from \"~/utils\";\nimport { requireUserId } from \"~/session.server\";\nimport { useState } from \"react\";\nimport { useUser } from \"~/utils\";\nimport { motion } from \"framer-motion\";\n\ntype LoaderData = {\n  posts: Awaited<ReturnType<typeof getPostListings>>;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await requireUserId(request);\n  const posts = await getPostListings({ userId: userId });\n  return json<LoaderData>({ posts });\n};\n\nconst variants = {\n  open: { opacity: 1, y: \"30%\" },\n  closed: { opacity: 1, x: \"0%\" },\n};\n\nexport default function PostsRoute() {\n  const { posts } = useLoaderData() as LoaderData;\n  const adminUser = useOptionalAdminUser();\n  const user = useOptionalUser();\n  const username = useUser();\n  const [isOpen, setIsOpen] = useState(false);\n  const container = {\n    hidden: { opacity: 0 },\n    show: {\n      opacity: 1,\n      transition: {\n        delayChildren: 0.2,\n      },\n    },\n  };\n\n  const item = {\n    hidden: { opacity: 0 },\n    show: { opacity: 1 },\n  };\n  return (\n    <main>\n      <div className=\"flex h-full min-h-screen flex-col\">\n        <header className=\"flex flex-col items-center justify-between bg-teal-400 p-4 text-white md:flex-row\">\n          <h1 className=\"mb-4 text-3xl font-bold md:mb-0\">\n            <Link to=\".\">Job Posts</Link>\n          </h1>\n          <div className=\"flex flex-col md:flex-row\">\n          <button className=\"sm:hidden\">\n            {\" \"}\n            {user ? (\n              <Link\n                to=\"/posts/user\"\n                className=\"mb-4 mr-4 flex items-center justify-center rounded-md border border-transparent bg-white px-4  py-2 text-base font-medium text-black shadow-sm hover:bg-black hover:text-white sm:px-8 md:mb-0\"\n              >\n                Dashboard\n              </Link>\n            ) : null}\n          </button>\n          <button className=\"sm:hidden\">\n            {\" \"}\n            {user ? (\n              <Link\n                to=\"/map\"\n                className=\"mb-4  mr-4 flex items-center justify-center rounded-md border border-transparent bg-white px-4  py-2 text-base font-medium text-black shadow-sm hover:bg-black hover:text-white sm:px-8 md:mb-0\"\n              >\n                Map Journey\n              </Link>\n            ) : null}\n          </button>\n          <button className=\"sm:hidden\">\n            {\" \"}\n            {user ? (\n              <Link\n                to=\"/notes\"\n                className=\"mb-4 mr-4 flex items-center justify-center rounded-md border border-transparent bg-white px-4  py-2 text-base font-medium text-black shadow-sm hover:bg-black hover:text-white sm:px-8 md:mb-0\"\n              >\n                Notes\n              </Link>\n            ) : null}\n          </button>\n          <button className=\"sm:hidden\">\n            {\" \"}\n            {user ? (\n              <Link\n                to=\"/jobappnotes\"\n                className=\"mb-4 mr-4 flex items-center justify-center rounded-md border border-transparent bg-white px-4  py-2 text-base font-medium text-black shadow-sm hover:bg-black hover:text-white sm:px-8 md:mb-0\"\n              >\n                Job App Notes\n              </Link>\n            ) : null}\n          </button>\n          <Form action=\"/logout\" method=\"post\">\n            <button\n              type=\"submit\"\n              className=\"m-2  mr-4 rounded bg-white px-4 py-2 font-medium text-black hover:bg-black hover:text-white active:bg-black\"\n            >\n              Logout\n            </button>\n          </Form>\n          <p className=\" ml-4 hidden font-medium text-white md:hidden\">\n            {username.email}\n          </p>\n          </div>\n        </header>\n\n        <div\n          className=\"max-w-screen-3xl my-14 flex w-full flex-col items-center rounded bg-gradient-to-r from-indigo-900  \n        to-white px-4 py-6\"\n        >\n          <motion.ul variants={container} initial=\"hidden\" animate=\"show\">\n            <motion.li variants={item}>\n              {adminUser ? (\n                <div className=\"flex-col-2 mt-4 flex flex w-full max-w-3xl items-center space-y-1 rounded-lg bg-white px-4 py-6 text-center shadow-lg\">\n                  <a className=\"flex items-center rounded-md bg-gray-700  px-2 py-2 text-center text-white hover:opacity-50\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      className=\"h-5 w-5 opacity-75\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                      stroke-width=\"2\"\n                    >\n                      <path\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                        d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"\n                      />\n                      <path\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                        d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n                      />\n                    </svg>\n\n                    <Link to=\"admin\" className=\"m-2 text-sm font-medium \">\n                      {\" \"}\n                      Admin{\" \"}\n                    </Link>\n                  </a>\n                </div>\n              ) : null}\n            </motion.li>\n\n            <motion.li>\n              {\" \"}\n              <motion.nav\n                animate={isOpen ? \"open\" : \"closed\"}\n                variants={variants}\n              >\n                <div\n                  className=\"flex-col-2 mt-4 flex flex w-full max-w-3xl items-center space-y-1 rounded-lg bg-white px-4 py-6 text-center shadow-lg\"\n                  onClick={() => setIsOpen((isOpen) => !isOpen)}\n                >\n                  <div className=\"flex-col-2 mt-4  flex space-y-1 hover:cursor-pointer\">\n                    <details className=\"group\">\n                      <summary className=\"flex items-center rounded-md  bg-gray-700 px-2 py-2 text-white\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          className=\"h-5 w-5 opacity-75\"\n                          fill=\"none\"\n                          viewBox=\"0 0 24 24\"\n                          stroke=\"currentColor\"\n                          stroke-width=\"2\"\n                        >\n                          <path\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                            d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\"\n                          />\n                        </svg>\n\n                        <span className=\"ml-3 text-sm font-medium\">\n                          Job Posts\n                        </span>\n\n                        <span className=\"ml-auto shrink-0 transition duration-300 group-open:-rotate-90\">\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            className=\"h-5 w-5\"\n                            viewBox=\"0 0 20 20\"\n                            fill=\"currentColor\"\n                          >\n                            <path\n                              fill-rule=\"evenodd\"\n                              d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n                              clip-rule=\"evenodd\"\n                            />\n                          </svg>\n                        </span>\n                      </summary>\n\n                      <ol className=\"m-2 list-decimal\">\n                        {posts.map((post) => (\n                          <li key={post.slug}>\n                            <div className=\"flex items-center\">\n                              <Link\n                                to={post.slug}\n                                prefetch=\"intent\"\n                                className=\"text-black-600 font-bold underline\"\n                              >\n                                {post.title}\n                              </Link>\n                              :{\" \"}\n                              <em\n                                className=\"ml-1 rounded-sm bg-gray-100 p-1 text-center font-bold \"\n                                style={{\n                                  color:\n                                    post.appStatus === \"Applied\"\n                                      ? \"blue\"\n                                      : post.appStatus === \"Interviewing\"\n                                      ? \"orange\"\n                                      : post.appStatus === \"Hired\"\n                                      ? \"green\"\n                                      : post.appStatus === \"Not-selected\"\n                                      ? \"red\"\n                                      : \"\",\n                                }}\n                              >\n                                {post.appStatus}\n                              </em>\n                            </div>\n                          </li>\n                        ))}\n                      </ol>\n                    </details>\n                  </div>\n                </div>\n              </motion.nav>\n            </motion.li>\n          </motion.ul>\n        </div>\n      </div>\n    </main>\n  );\n}\n", "import { Form, Link, Outlet, useLoaderData } from \"@remix-run/react\";\nimport { useRevalidator } from \"react-router-dom\";\n\nimport { useEffect, useState } from \"react\";\n\nimport { animateScroll as scroll } from \"react-scroll\";\nimport type { LoaderFunction } from \"@remix-run/node\";\nimport { getPostListings } from \"~/models/post.server\";\nimport { json } from \"@remix-run/node\";\nimport { requireUser, requireUserId } from \"~/session.server\";\nimport { useOptionalUser } from \"~/utils\";\nimport { useUser } from \"~/utils\";\nimport { motion } from \"framer-motion\";\n\n\nimport { images } from \"../../images.js\";\n\ntype LoaderData = {\n  posts: Awaited<ReturnType<typeof getPostListings>>;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  await requireUser(request);\n  const userId = await requireUserId(request);\n\n  return json<LoaderData>({ posts: await getPostListings({ userId: userId }) });\n};\n\nexport interface ImageInfo {\n  src: string;\n  alt: string;\n}\n\nfunction getRandomImage() {\n  const randomIndex = Math.floor(Math.random() * images.length);\n  return images[randomIndex];\n}\n\nexport default function UserRoute() {\n  const user = useOptionalUser();\n\n  const { posts } = useLoaderData() as LoaderData;\n\n  const username = useUser();\n  const container = {\n    hidden: { opacity: 0 },\n    show: {\n      opacity: 1,\n      transition: {\n        delayChildren: 0.5,\n      },\n    },\n  };\n\n  const item = {\n    hidden: { opacity: 0 },\n    show: { opacity: 1 },\n  };\n  const [randomImage, setRandomImage] = useState<ImageInfo>();\n  const [imageLoading, setImageLoading] = useState(true);\n\n  const imageLoaded = () => {\n    setImageLoading(false);\n  };\n\n  useEffect(() => {\n    const image = getRandomImage();\n    setRandomImage(image);\n  }, []);\n\n  function WindowFocusRevalidator() {\n    let revalidator = useRevalidator();\n\n    return <div hidden={revalidator.state === \"idle\"}></div>;\n  }\n\n  return (\n    <div className=\"flex-col sm:overflow-x-hidden\">\n      <header className=\"flex flex-col items-center justify-between bg-teal-400 p-4 text-white sm:hidden md:flex-row\">\n        <h1 className=\"mb-4 text-3xl font-bold md:mb-0\">\n          <Link to=\".\">Dashboard</Link>\n        </h1>\n        <div className=\"flex flex-col  md:flex-row\">\n          <button\n            type=\"submit\"\n            className=\"hover: mb-4 mr-4 mt-2 rounded bg-indigo-900 px-4 py-2 font-bold text-white text-white hover:bg-black active:bg-black sm:hidden md:mb-0\"\n          >\n            <Link to=\"/map\" className=\"text-md text-white-600\">\n              Map Journey\n            </Link>\n          </button>\n          <button\n            type=\"submit\"\n            className=\"hover: mb-4 mr-4 mt-2 rounded bg-indigo-900 px-4 py-2 font-bold text-white text-white hover:bg-black active:bg-black sm:hidden md:mb-0\"\n          >\n            <Link to=\"/forgot\" className=\"text-md text-white-600\">\n              Reset Password\n            </Link>\n          </button>\n          <button\n            type=\"submit\"\n            className=\"mb-4 mr-4 mt-2  rounded bg-indigo-900  px-4 py-2 font-bold text-white hover:bg-black hover:text-white active:bg-black sm:hidden md:mb-0\"\n          >\n            <Link to=\"/notes\" className=\"text-md text-white-600\">\n              Notes\n            </Link>\n          </button>\n          <button\n            type=\"submit\"\n            className=\"hover: mb-4 mr-4 mt-2  rounded bg-indigo-900 px-4  py-2 font-bold text-white  hover:bg-black active:bg-black sm:hidden md:mb-0\"\n          >\n            <Link to=\"/jobappnotes\" className=\"text-md text-white-600\">\n              Job App Notes\n            </Link>\n          </button>\n\n          <button\n            type=\"submit\"\n            className=\"mb-4 mr-4 mt-2 rounded bg-indigo-900 px-4 py-2 font-bold text-white hover:bg-black hover:text-white active:bg-black sm:hidden md:mb-0\"\n          >\n            <Link to=\"/posts\" className=\"text-md text-white-600\">\n              Job Posts\n            </Link>\n          </button>\n          <Form action=\"/logout\" method=\"post\">\n            <button\n              type=\"submit\"\n              className=\" m-2 rounded bg-indigo-900 px-4 py-2 font-bold text-white hover:bg-black hover:text-white active:bg-black md:mb-0\"\n            >\n              Logout\n            </button>\n          </Form>\n          <p className=\"hidden font-medium md:hidden\">{username.email}</p>\n        </div>\n      </header>\n      <section className=\"mx-auto mb-6 mt-4 rounded bg-[#F3F4F6] pb-0 pt-0 lg:pb-0 lg:pt-[0px]\">\n        <div className=\"container mx-auto max-w-4xl\">\n          <div className=\"-mx-4 flex flex-wrap\">\n            <div className=\"w-full px-4 md:w-full xl:w-full\">\n              <div className=\"overflow-hidden rounded-lg bg-white\">\n                {randomImage && (\n                  <motion.img\n                    initial={{ opacity: 0 }}\n                    animate={{\n                      opacity: imageLoading ? 0 : 1,\n                    }}\n                    onLoad={imageLoaded}\n                    transition={{ delay: 0, duration: 1 }}\n                    src={randomImage.src}\n                    alt={randomImage.alt}\n                    className=\"h-full w-full\"\n                  />\n                )}\n                <div className=\"-lg bg-opacity-78  mx-auto mb-10  max-w-screen-xl flex-col space-y-6 overflow-hidden rounded-b-xl bg-gradient-to-r from-teal-400 to-white p-6 font-bold text-black shadow-md\">\n                  {user ? (\n                    <motion.ul\n                      variants={container}\n                      initial=\"hidden\"\n                      animate=\"show\"\n                    >\n                      <motion.li variants={item}>\n                        <h1 className=\"font-primary my-6 mb-2 border-b-2 text-center text-3xl\">\n                          {\" \"}\n                          {`${user?.email} Job Posts`}\n                        </h1>\n                      </motion.li>\n                    </motion.ul>\n                  ) : null}\n                  <div className=\"grid grid-cols-4 gap-6 \">\n                    <nav className=\"from indigo-700 to purple-600 col-span-4 mb-auto flex w-full  rounded rounded bg-gray-900 bg-gradient-to-br px-5 shadow-lg md:col-span-1\">\n                      <ol className=\"mx-4 mr-4 list-decimal text-lg font-bold text-white \">\n                        {user\n                          ? posts.map((post) => (\n                              <div className=\"curser-pointer hover:scale-102  bg-custom-spaceBlack my-4 rounded text-center transition duration-300 ease-in-out  hover:transform\">\n                                <li key={post.slug} className=\"my-2 \">\n                                  <Link\n                                    to={post.slug}\n                                    className=\"px-2 text-xl  font-bold  text-white \"\n                                    onClick={WindowFocusRevalidator}\n                                  >\n                                    {post.title}\n                                  </Link>\n                                </li>\n                              </div>\n                            ))\n                          : null}\n                        <div className=\"my-2 mb-4 \"></div>\n                      </ol>\n                    </nav>\n\n                    <main className=\"col-span-4 md:col-span-3\">\n                      <Outlet />\n                    </main>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  return (\n    <div className=\"text-red-500\">\n      Oh no, something went wrong!\n      <pre>{error.message}</pre>\n    </div>\n  );\n}\n", "import dashboard from \"dashboard.jpg\";\r\nimport dashboard2 from \"dashboard.jpg\";\r\nimport dashboard3 from \"dashboard3.jpg\";\r\nimport dashboard4 from \"dashboard4.jpg\";\r\nimport dashboard5 from \"dashboard5.jpg\";\r\nimport dashboard6 from \"dashboard6.jpg\";\r\nimport dashboard7 from \"dashboard7.jpg\";\r\nimport dashboard8 from \"dashboard8.jpg\";\r\nimport dashboard9 from \"dashboard9.jpg\";\r\nimport dashboard10 from \"dashboard10.jpg\";\r\nimport dashboard11 from \"dashboard11.jpg\";\r\nimport dashboard12 from \"dashboard12.jpg\";\r\nimport dashboard13 from \"dashboard13.jpg\";\r\nimport dashboard14 from \"dashboard14.jpg\";\r\nimport dashboard15 from \"dashboard15.jpg\";\r\nimport dashboard16 from \"dashboard16.jpg\";\r\nimport dashboard17 from \"dashboard17.jpg\";\r\nimport dashboard18 from \"dashboard18.jpg\";\r\nimport dashboard19 from \"dashboard19.jpg\";\r\nimport dashboard20 from \"dashboard20.jpg\";\r\nimport dashboard21 from \"dashboard21.jpg\";\r\nimport dashboard22 from \"dashboard22.jpg\";\r\nimport dashboard23 from \"dashboard23.jpg\";\r\nimport dashboard24 from \"dashboard24.jpg\";\r\nimport dashboard25 from \"dashboard25.jpg\";\r\nimport dashboard26 from \"dashboard26.jpg\";\r\nimport dashboard27 from \"dashboard27.jpg\";\r\n\r\nexport interface ImageInfo {\r\n  src: string;\r\n  alt: string;\r\n}\r\n\r\nexport const images: ImageInfo[] = [\r\n  { src: dashboard, alt: \"image 1\" },\r\n  { src: dashboard2, alt: \"image 2\" },\r\n  { src: dashboard3, alt: \"image 3\" },\r\n  { src: dashboard4, alt: \"image 4\" },\r\n  { src: dashboard5, alt: \"image 5\" },\r\n  { src: dashboard6, alt: \"image 6\" },\r\n  { src: dashboard7, alt: \"image 7\" },\r\n  { src: dashboard8, alt: \"image 8\" },\r\n  { src: dashboard9, alt: \"image 9\" },\r\n  { src: dashboard10, alt: \"image 10\" },\r\n  { src: dashboard11, alt: \"image 11\" },\r\n  { src: dashboard12, alt: \"image 12\" },\r\n  { src: dashboard13, alt: \"image 13\" },\r\n  { src: dashboard14, alt: \"image 14\" },\r\n  { src: dashboard15, alt: \"image 15\" },\r\n  { src: dashboard16, alt: \"image 16\" },\r\n  { src: dashboard17, alt: \"image 17\" },\r\n  { src: dashboard18, alt: \"image 18\" },\r\n  { src: dashboard19, alt: \"image 19\" },\r\n  { src: dashboard20, alt: \"image 20\" },\r\n  { src: dashboard21, alt: \"image 21\" },\r\n  { src: dashboard22, alt: \"image 22\" },\r\n  { src: dashboard23, alt: \"image 23\" },\r\n  { src: dashboard24, alt: \"image 24\" },\r\n  { src: dashboard25, alt: \"image 25\" },\r\n  { src: dashboard26, alt: \"image 26\" },\r\n  { src: dashboard27, alt: \"image 27\" },\r\n];\r\n", "import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  Form,\n  useActionData,\n  useCatch,\n  useLoaderData,\n  useParams,\n  useTransition,\n  Outlet,\n} from \"@remix-run/react\";\n\nimport { redirect, json } from \"@remix-run/node\";\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport type { Post } from \"~/models/post.server\";\nimport {\n  createPost,\n  deletePost,\n  getPost,\n  updatePost,\n} from \"~/models/post.server\";\nimport invariant from \"tiny-invariant\";\nimport { requireUser, requireUserId } from \"~/session.server\";\nimport axios from \"axios\";\nimport { motion } from \"framer-motion\";\nimport { Autocomplete } from \"@react-google-maps/api\";\n\ntype LoaderData = { post?: Post };\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  await requireUser(request);\n  invariant(params.slug, \"slug is required\");\n  if (params.slug === \"new\") {\n    return json<LoaderData>({});\n  }\n  const post = await getPost(params.slug);\n  if (!post) {\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n  return json<LoaderData>({ post });\n};\n\ntype ActionData =\n  | {\n      title: null | string;\n      slug: null | string;\n      address: null | string;\n      date: null | string;\n      coordinateLat: null | string;\n      coordinateLong: null | string;\n      markdown: null | string;\n      jobAppLink: null | string;\n      appStatus: null | string;\n    }\n  | undefined;\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  await requireUser(request);\n  invariant(params.slug, \"slug is required\");\n  const formData = await request.formData();\n  const intent = formData.get(\"intent\");\n  const userId = await requireUserId(request);\n  if (intent === \"delete\") {\n    await deletePost(params.slug);\n    return redirect(\"/posts/user\");\n  }\n\n  const title = formData.get(\"title\");\n\n  const jobTitle = formData.get(\"slug\");\n  const slug = `${jobTitle}-${title}`;\n  const date = formData.get(\"date\");\n  const address = formData.get(\"address\");\n\n  let coordinateLat = formData.get(\"latitude\");\n  let coordinateLong = formData.get(\"longitude\");\n  const markdown = formData.get(\"markdown\");\n  const jobAppLink = formData.get(\"jobAppLink\");\n\n  const appStatus = formData.get(\"appStatus\");\n\n  const errors: ActionData = {\n    title: title ? null : \"Company Name  is required\",\n    slug: slug ? null : \"Job Title is required\",\n    address: address ? null : \"Company Address is required\",\n    date: date ? null : \"date is required\",\n    jobAppLink: jobAppLink ? null : \"Job Application website link is required\",\n    appStatus: appStatus ? null : \"Application status is required\",\n    coordinateLat: coordinateLat ? null : \"Coordinate latitude is required\",\n    coordinateLong: coordinateLong ? null : \"Coordinate longitude is required\",\n    markdown: markdown ? null : \"Markdown is required\",\n  };\n\n  const urlPattern = /^https:\\/\\//;\n\n  if (typeof jobAppLink === \"string\" && !urlPattern.test(jobAppLink)) {\n    errors.jobAppLink = \"Website address must start with 'https://'\";\n  }\n\n  if (\n    typeof slug !== \"string\" ||\n    /[\\{\\}\\[\\]\\(\\)\\#\\@\\!\\$\\%\\^\\&\\*\\+\\=\\<\\>\\?\\,\\'\\\"\\;\\:\\\\\\/]/g.test(slug)\n  ) {\n    errors.slug = \"Please use alphanumeric characters only\";\n  }\n\n  // return data if we have errors\n\n  const hasErrors = Object.values(errors).some((errorMessage) => errorMessage);\n  if (hasErrors) {\n    return json<ActionData>(errors);\n  }\n\n  invariant(typeof title === \"string\", \"title must be a string\");\n  invariant(typeof slug === \"string\", \"slug must be a string\");\n  invariant(typeof address === \"string\", \"address must be a string\");\n  invariant(typeof date === \"string\", \"date must be a date\");\n  invariant(typeof jobAppLink === \"string\", \"website address must be a string\");\n  invariant(\n    typeof appStatus === \"string\",\n    \"Application status must be a string\"\n  );\n  invariant(\n    typeof coordinateLat === \"string\",\n    \"coordinate latitude must be a number\"\n  );\n  invariant(\n    typeof coordinateLong === \"string\",\n    \"coordinates longitude must be a number\"\n  );\n  invariant(typeof markdown === \"string\", \"markdown must be a string\");\n  invariant(typeof userId === \"string\", \"userId must be a string\");\n\n  if (params.slug === \"new\") {\n    await createPost({\n      title,\n      slug,\n      address,\n      date,\n      jobAppLink,\n      appStatus,\n      coordinateLat,\n      coordinateLong,\n      markdown,\n      userId,\n    });\n  } else {\n    await updatePost(params.slug, {\n      title,\n      slug,\n      address,\n      date,\n      jobAppLink,\n      appStatus,\n      coordinateLat,\n      coordinateLong,\n      markdown,\n      userId,\n    });\n  }\n\n  return redirect(\"/posts/user\");\n};\n\nconst inputClassName = `w-full rounded border border-gray-500 px-2 py-1 text-lg text-blue-500`;\n\ninterface LatLng {\n  lat: number;\n  lng: number;\n}\n\ninterface GetCoordsProps {\n  address: string;\n  latitude: string | null;\n  longitude: string | null;\n  onCoordinatesChange: (\n    address: string,\n    latitude: string,\n    longitude: string\n  ) => void;\n}\n\nexport function getCoords({\n  latitude,\n  longitude,\n  onCoordinatesChange,\n}: GetCoordsProps) {\n  const [address, setAddress] = useState(\"\");\n  const [latLng, setLatLng] = useState<LatLng | null>(null);\n  const handleAddressChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setAddress(e.target.value);\n  };\n\n  const container = {\n    hidden: { opacity: 0 },\n    show: {\n      opacity: 1,\n      transition: {\n        delayChildren: 0.5,\n      },\n    },\n  };\n\n  const item = {\n    hidden: { opacity: 0 },\n    show: { opacity: 1 },\n  };\n\n  const [autocomplete, setAutocomplete] =\n    useState<google.maps.places.Autocomplete | null>(null);\n\n  const onLoad = (autocomplete: google.maps.places.Autocomplete) => {\n    setAutocomplete(autocomplete);\n  };\n\n  const onPlaceChanged = () => {\n    if (autocomplete !== null) {\n      const place = autocomplete.getPlace();\n      console.log(place.formatted_address);\n      const address = place?.formatted_address; // Optional chaining operator to handle undefined values\n\n      // Only set the state if the address value is not undefined\n      address && setAddress(address);\n    } else {\n      console.log(\"Autocomplete is not loaded yet!\");\n    }\n  };\n\n  const handleFindClick = async () => {\n    try {\n      const response = await axios.get(\n        `https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(\n          address\n        )}&key=AIzaSyCe6hjfULFtLoM6SvCB5Epr43HTegwTx1o`\n      );\n      const result = response.data.results[0];\n      const { lat, lng } = result.geometry.location;\n      setLatLng({ lat, lng });\n      onCoordinatesChange(address, lat, lng);\n    } catch (error) {\n      console.error(error);\n      setLatLng(null);\n    }\n  };\n\n  return (\n    <motion.ul variants={container} initial=\"hidden\" animate=\"show\">\n      <motion.li variants={item}>\n        <div className=\"lg bg-custom flex flex-col items-center rounded p-6 text-center text-blue-50 shadow-lg md:flex-row\">\n          <Form className=\"md: mx-auto w-2/3 w-full\">\n            <h6 className=\"mb-4  w-full p-2  text-center text-xl font-bold text-white\">\n              Enter Company Address for Coordinates\n            </h6>\n\n            <label className=\" text-md mb-8 text-center font-bold text-white\">\n              <p className=\"mb-4 text-lg\">Address: </p>\n\n              <Autocomplete onLoad={onLoad} onPlaceChanged={onPlaceChanged}>\n                <input\n                  type=\"text\"\n                  id=\"autocomplete\"\n                  className=\"w-full p-2 text-center  text-blue-500 md:w-44\"\n                  value={address}\n                  onChange={handleAddressChange}\n                ></input>\n              </Autocomplete>\n            </label>\n\n            <button\n              className=\"m-4 rounded bg-indigo-900 px-4 py-2 font-bold text-white hover:bg-teal-400\"\n              onClick={handleFindClick}\n            >\n              Find\n            </button>\n            {latLng && (\n              <p className=\"lg text-center text-blue-50\">\n                Latitude: {latLng.lat}, Longitude: {latLng.lng}\n              </p>\n            )}\n          </Form>\n        </div>\n      </motion.li>\n    </motion.ul>\n  );\n}\n\nexport default function NewPostRoute() {\n  const data = useLoaderData() as LoaderData;\n  const errors = useActionData() as ActionData;\n\n  const transition = useTransition();\n  const isCreating = transition.submission?.formData.get(\"intent\") === \"create\";\n  const isUpdating = transition.submission?.formData.get(\"intent\") === \"update\";\n  const isDeleting = transition.submission?.formData.get(\"intent\") === \"delete\";\n  const isNewPost = !data.post;\n\n  const [address, setAddress] = useState(data.post?.address || \"\");\n  const [latitude, setLatitude] = useState(data.post?.coordinateLat || \"\");\n  const [longitude, setLongitude] = useState(data.post?.coordinateLong || \"\");\n  const postRef = useRef<HTMLUListElement>(null);\n  const outletRef = useRef<HTMLDivElement>(null);\n\n  function handleAddressChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const address = event.target.value;\n    setAddress(address);\n  }\n\n  function handleLatitudeChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const value = event.target.value;\n    setLatitude(value);\n  }\n\n  function handleLongitudeChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const value = event.target.value;\n    setLongitude(value);\n  }\n\n  const container = {\n    hidden: { opacity: 0 },\n    show: {\n      opacity: 1,\n      transition: {\n        delayChildren: 0.5,\n      },\n    },\n  };\n\n  const item = {\n    hidden: { opacity: 0 },\n    show: { opacity: 1 },\n  };\n\n  useEffect(() => {\n    if (postRef.current) {\n      postRef.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n    }\n  }, [postRef.current]);\n\n  return (\n    <motion.ul\n      variants={container}\n      ref={postRef}\n      initial=\"hidden\"\n      animate=\"show\"\n    >\n      <motion.li variants={item}>\n        <div className=\"flex max-w-screen-lg flex-col\">\n          <div className=\"p-2\">\n            {getCoords({\n              address,\n              latitude,\n              longitude,\n              onCoordinatesChange: (address, lat, lng) => {\n                setAddress(address);\n                setLatitude(lat);\n                setLongitude(lng);\n              },\n            })}\n          </div>\n\n          <div\n            className=\"bg-custom-newColor mt-4 rounded-xl p-6 text-lg font-bold text-white shadow-lg md:mt-0 md:flex md:w-full md:max-w-none md:flex-col\"\n            ref={outletRef}\n          >\n            <Form method=\"post\" key={data.post?.slug ?? \"new\"}>\n              <p>\n                <label>\n                  Company Name:{\" \"}\n                  {errors?.title ? (\n                    <em className=\"text-red-600\">{errors.title}</em>\n                  ) : null}\n                  <input\n                    type=\"text\"\n                    name=\"title\"\n                    id=\"title\"\n                    className={inputClassName}\n                    defaultValue={data.post?.title}\n                  />\n                </label>\n              </p>\n              <p>\n                <label>\n                  Job Title:{\" \"}\n                  <input\n                    type=\"text\"\n                    name=\"slug\"\n                    id=\"slug\"\n                    className={inputClassName}\n                    defaultValue={data.post?.slug.split(\"-\")[0]} // display only the jobTitle part of the slug on form update/edit\n                  />\n                  {errors?.slug ? (\n                    <em className=\"text-red-600\">{errors.slug}</em>\n                  ) : null}\n                </label>\n              </p>\n\n              <p>\n                <label>\n                  Date Applied:{\" \"}\n                  <input\n                    type=\"date\"\n                    name=\"date\"\n                    id=\"date\"\n                    className={inputClassName}\n                    defaultValue={data.post?.date}\n                    required\n                  />\n                  {errors?.date ? (\n                    <em className=\"text-red-600\">{errors.date}</em>\n                  ) : null}\n                </label>\n              </p>\n              <p>\n                <label>\n                  Job Application Website Link:{\" \"}\n                  <input\n                    type=\"text\"\n                    name=\"jobAppLink\"\n                    id=\"jobAppLink\"\n                    className={inputClassName}\n                    defaultValue={data.post?.jobAppLink}\n                  />\n                  {errors?.jobAppLink ? (\n                    <em className=\"text-red-600\">{errors.jobAppLink}</em>\n                  ) : null}\n                </label>\n              </p>\n              <p>\n                <label>\n                  Company Address:{\" \"}\n                  <input\n                    type=\"text\"\n                    name=\"address\"\n                    id=\"address\"\n                    value={address ?? \"\"}\n                    onChange={handleAddressChange}\n                    className={inputClassName}\n                    defaultValue={data.post?.address}\n                    readOnly\n                  />\n                  {errors?.address ? (\n                    <em className=\"text-red-600\">{errors.address}</em>\n                  ) : null}\n                </label>\n              </p>\n              <p>\n                <label htmlFor=\"coordinateLat\">\n                  Job Coordinate Latitude:{\" \"}\n                  {errors?.coordinateLat ? (\n                    <em className=\"text-red-600\">{errors.coordinateLat}</em>\n                  ) : null}\n                </label>\n                <input\n                  type=\"number\"\n                  name=\"latitude\"\n                  id=\"latitude\"\n                  value={latitude ?? \"\"}\n                  onChange={handleLatitudeChange}\n                  className={`${inputClassName} font-mono`}\n                  defaultValue={data.post?.coordinateLat}\n                  readOnly\n\n                />\n              </p>\n\n              <p>\n                <label htmlFor=\"coordinateLong\">\n                  Job Coordinate Longitude:{\" \"}\n                  {errors?.coordinateLong ? (\n                    <em className=\"text-red-600\">{errors.coordinateLong}</em>\n                  ) : null}\n                </label>\n                <input\n                  type=\"number\"\n                  name=\"longitude\"\n                  id=\"longitude\"\n                  value={longitude ?? \"\"}\n                  onChange={handleLongitudeChange}\n                  className={`${inputClassName} font-mono`}\n                  defaultValue={data.post?.coordinateLong}\n                  readOnly\n                />\n              </p>\n              <div>\n                Job Application Status\n                <p>\n                  <label>\n                    Applied{\" \"}\n                    <input\n                      type=\"radio\"\n                      name=\"appStatus\"\n                      id=\"applied\"\n                      value=\"Applied\"\n                      defaultChecked={data.post?.appStatus === \"Applied\"}\n                    />\n                  </label>\n                </p>\n                <p>\n                  <label>\n                    Interviewing{\" \"}\n                    <input\n                      type=\"radio\"\n                      name=\"appStatus\"\n                      id=\"interviewing\"\n                      value=\"Interviewing\"\n                      defaultChecked={data.post?.appStatus === \"Interviewing\"}\n                    />\n                  </label>\n                </p>\n                <p>\n                  <label>\n                    Hired{\" \"}\n                    <input\n                      type=\"radio\"\n                      name=\"appStatus\"\n                      id=\"hired\"\n                      value=\"Hired\"\n                      defaultChecked={data.post?.appStatus === \"Hired\"}\n                    />\n                  </label>\n                </p>\n                <p>\n                  <label>\n                    Not Selected{\" \"}\n                    <input\n                      type=\"radio\"\n                      name=\"appStatus\"\n                      id=\"not-selected\"\n                      value=\"Not-selected\"\n                      defaultChecked={data.post?.appStatus === \"Not-selected\"}\n                    />\n                  </label>\n                </p>\n                {errors?.appStatus && (\n                  <p className=\"text-red-500\">{errors.appStatus}</p>\n                )}\n              </div>\n\n              <p>\n                <label htmlFor=\"markdown\">\n                  Details and Notes:{\" \"}\n                  {errors?.markdown ? (\n                    <em className=\"text-red-600\">{errors.markdown}</em>\n                  ) : null}\n                </label>\n                <textarea\n                  id=\"markdown\"\n                  rows={20}\n                  name=\"markdown\"\n                  className={`${inputClassName} font-mono`}\n                  defaultValue={data.post?.markdown}\n                />\n              </p>\n              <div className=\"flex justify-end gap-4\">\n                {isNewPost ? null : (\n                  <button\n                    type=\"submit\"\n                    name=\"intent\"\n                    value=\"delete\"\n                    className=\"rounded bg-red-500 px-4 py-2 text-white hover:bg-red-600 focus:bg-red-400 disabled:bg-red-300\"\n                    disabled={isDeleting}\n                  >\n                    {isDeleting ? \"Deleting...\" : \"Delete\"}\n                  </button>\n                )}\n                <button\n                  type=\"submit\"\n                  name=\"intent\"\n                  value={isNewPost ? \"create\" : \"update\"}\n                  className=\"hover:bg-custom rounded bg-teal-400 px-4 py-2 text-white focus:bg-indigo-900 disabled:bg-gray-300\"\n                  disabled={isCreating || isUpdating}\n                >\n                  {isNewPost\n                    ? isCreating\n                      ? \"Creating...\"\n                      : \"Create Post\"\n                    : null}\n                  {isNewPost ? null : isUpdating ? \"Updating...\" : \"Update\"}\n                </button>\n              </div>\n            </Form>\n          </div>\n        </div>\n      </motion.li>\n    </motion.ul>\n  );\n}\nexport function CatchBoundary() {\n  const caught = useCatch();\n  const params = useParams();\n  if (caught.status === 404) {\n    return (\n      <div className=\"text-red-500\">\n        Uh oh! The post with the slug \"{params.slug}\" does not exist!\n      </div>\n    );\n  }\n  throw new Error(`Unsupported thrown response status code: ${caught.status}`);\n}\n\nexport function ErrorBoundary({ error }: { error: unknown }) {\n  if (error instanceof Error) {\n    return (\n      <div className=\"text-red-500\">\n        Oh no, something went wrong!\n        <pre>{error.message}</pre>\n      </div>\n    );\n  }\n  return <div className=\"text-red-500\">Oh no, something went wrong!</div>;\n}", "import { Link } from \"@remix-run/react\";\nimport { motion } from \"framer-motion\";\n\nexport default function UserIndexRoute() {\n  const container = {\n    hidden: { opacity: 0 },\n    show: {\n      opacity: 1,\n      transition: {\n        delayChildren: 0.5,\n      },\n    },\n  };\n\n  const item = {\n    hidden: { opacity: 0 },\n    show: { opacity: 1 },\n  };\n  return (\n    <motion.ul variants={container} initial=\"hidden\" animate=\"show\">\n      <motion.li variants={item}>\n        <p>\n          <Link to=\"new\" className=\"text-xl text-white hover:text-custom-newColor\">\n            Create a New Post\n          </Link>\n        </p>\n      </motion.li>\n    </motion.ul>\n  );\n}\n", "export default {'entry':{'module':'/build/entry.client-T7EDZA2Q.js','imports':['/build/_shared/chunk-YEID6IW6.js','/build/_shared/chunk-YYBX7GHC.js','/build/_shared/chunk-RODUX5XG.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-PR6NWS6J.js','imports':['/build/_shared/chunk-TMJLOEVS.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/PasswordResetSuccess':{'id':'routes/PasswordResetSuccess','parentId':'root','path':'PasswordResetSuccess','index':undefined,'caseSensitive':undefined,'module':'/build/routes/PasswordResetSuccess-OGAOABLW.js','imports':['/build/_shared/chunk-ODH2NS7P.js','/build/_shared/chunk-AUJITS7P.js','/build/_shared/chunk-K6WIK5TA.js','/build/_shared/chunk-CDIATO7R.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/PasswordResetSuccess/index':{'id':'routes/PasswordResetSuccess/index','parentId':'root','path':'PasswordResetSuccess','index':true,'caseSensitive':undefined,'module':'/build/routes/PasswordResetSuccess/index-2L55USOH.js','imports':['/build/_shared/chunk-ODH2NS7P.js','/build/_shared/chunk-AUJITS7P.js','/build/_shared/chunk-K6WIK5TA.js','/build/_shared/chunk-CDIATO7R.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/cookie':{'id':'routes/cookie','parentId':'root','path':'cookie','index':undefined,'caseSensitive':undefined,'module':'/build/routes/cookie-3N6546L4.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/forgot':{'id':'routes/forgot','parentId':'root','path':'forgot','index':undefined,'caseSensitive':undefined,'module':'/build/routes/forgot-R6NHTTZV.js','imports':['/build/_shared/chunk-UHX2GAPF.js','/build/_shared/chunk-K6WIK5TA.js','/build/_shared/chunk-CDIATO7R.js','/build/_shared/chunk-4KL7V6EI.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/healthcheck':{'id':'routes/healthcheck','parentId':'root','path':'healthcheck','index':undefined,'caseSensitive':undefined,'module':'/build/routes/healthcheck-JPGQFBOZ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-WRO3XCF6.js','imports':['/build/_shared/chunk-YD2CFXBM.js','/build/_shared/chunk-K6WIK5TA.js','/build/_shared/chunk-CDIATO7R.js','/build/_shared/chunk-4KL7V6EI.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/jobappnotes':{'id':'routes/jobappnotes','parentId':'root','path':'jobappnotes','index':undefined,'caseSensitive':undefined,'module':'/build/routes/jobappnotes-2GVPU6GY.js','imports':['/build/_shared/chunk-RRUPSDWX.js','/build/_shared/chunk-YD2CFXBM.js','/build/_shared/chunk-4KL7V6EI.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/jobappnotes/$jobappnoteId':{'id':'routes/jobappnotes/$jobappnoteId','parentId':'routes/jobappnotes','path':':jobappnoteId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/jobappnotes/$jobappnoteId-755H4MJZ.js','imports':['/build/_shared/chunk-AUYLHJJM.js','/build/_shared/chunk-CDIATO7R.js','/build/_shared/chunk-TMJLOEVS.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/jobappnotes/index':{'id':'routes/jobappnotes/index','parentId':'routes/jobappnotes','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/jobappnotes/index-PCXOTOQG.js','imports':['/build/_shared/chunk-CDIATO7R.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/jobappnotes/new':{'id':'routes/jobappnotes/new','parentId':'routes/jobappnotes','path':'new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/jobappnotes/new-YOARHRBJ.js','imports':['/build/_shared/chunk-CDIATO7R.js','/build/_shared/chunk-TMJLOEVS.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/join':{'id':'routes/join','parentId':'root','path':'join','index':undefined,'caseSensitive':undefined,'module':'/build/routes/join-D75TCSTY.js','imports':['/build/_shared/chunk-YD2CFXBM.js','/build/_shared/chunk-UHX2GAPF.js','/build/_shared/chunk-K6WIK5TA.js','/build/_shared/chunk-CDIATO7R.js','/build/_shared/chunk-4KL7V6EI.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-IISKTPJF.js','imports':['/build/_shared/chunk-YD2CFXBM.js','/build/_shared/chunk-UHX2GAPF.js','/build/_shared/chunk-K6WIK5TA.js','/build/_shared/chunk-CDIATO7R.js','/build/_shared/chunk-4KL7V6EI.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-3CW5ZZI5.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/map':{'id':'routes/map','parentId':'root','path':'map','index':undefined,'caseSensitive':undefined,'module':'/build/routes/map-WFUD66NT.js','imports':['/build/_shared/chunk-QLSZR4EG.js','/build/_shared/chunk-KOFPMDLO.js','/build/_shared/chunk-YD2CFXBM.js','/build/_shared/chunk-4KL7V6EI.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/map/index':{'id':'routes/map/index','parentId':'root','path':'map','index':true,'caseSensitive':undefined,'module':'/build/routes/map/index-B7HQER3J.js','imports':['/build/_shared/chunk-QLSZR4EG.js','/build/_shared/chunk-KOFPMDLO.js','/build/_shared/chunk-YD2CFXBM.js','/build/_shared/chunk-4KL7V6EI.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes':{'id':'routes/notes','parentId':'root','path':'notes','index':undefined,'caseSensitive':undefined,'module':'/build/routes/notes-RIER7IKB.js','imports':['/build/_shared/chunk-EI3GZ464.js','/build/_shared/chunk-YD2CFXBM.js','/build/_shared/chunk-4KL7V6EI.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes/$noteId':{'id':'routes/notes/$noteId','parentId':'routes/notes','path':':noteId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/notes/$noteId-TEYCY3OL.js','imports':['/build/_shared/chunk-AUYLHJJM.js','/build/_shared/chunk-CDIATO7R.js','/build/_shared/chunk-TMJLOEVS.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/notes/index':{'id':'routes/notes/index','parentId':'routes/notes','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/notes/index-C7RQB7RX.js','imports':['/build/_shared/chunk-CDIATO7R.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes/new':{'id':'routes/notes/new','parentId':'routes/notes','path':'new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/notes/new-B75KTYEF.js','imports':['/build/_shared/chunk-CDIATO7R.js','/build/_shared/chunk-TMJLOEVS.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/password-reset':{'id':'routes/password-reset','parentId':'root','path':'password-reset','index':undefined,'caseSensitive':undefined,'module':'/build/routes/password-reset-WBLZ3QTN.js','imports':['/build/_shared/chunk-E6MMPLEU.js','/build/_shared/chunk-AUJITS7P.js','/build/_shared/chunk-YD2CFXBM.js','/build/_shared/chunk-UHX2GAPF.js','/build/_shared/chunk-K6WIK5TA.js','/build/_shared/chunk-CDIATO7R.js','/build/_shared/chunk-4KL7V6EI.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/password-reset/index':{'id':'routes/password-reset/index','parentId':'root','path':'password-reset','index':true,'caseSensitive':undefined,'module':'/build/routes/password-reset/index-I4YEW4YC.js','imports':['/build/_shared/chunk-E6MMPLEU.js','/build/_shared/chunk-AUJITS7P.js','/build/_shared/chunk-YD2CFXBM.js','/build/_shared/chunk-UHX2GAPF.js','/build/_shared/chunk-K6WIK5TA.js','/build/_shared/chunk-CDIATO7R.js','/build/_shared/chunk-4KL7V6EI.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/posts':{'id':'routes/posts','parentId':'root','path':'posts','index':undefined,'caseSensitive':undefined,'module':'/build/routes/posts-REXIH7Q2.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/posts/$slug':{'id':'routes/posts/$slug','parentId':'routes/posts','path':':slug','index':undefined,'caseSensitive':undefined,'module':'/build/routes/posts/$slug-YHF52VLI.js','imports':['/build/_shared/chunk-AUYLHJJM.js','/build/_shared/chunk-KOFPMDLO.js','/build/_shared/chunk-4KL7V6EI.js','/build/_shared/chunk-TMJLOEVS.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/posts/admin':{'id':'routes/posts/admin','parentId':'routes/posts','path':'admin','index':undefined,'caseSensitive':undefined,'module':'/build/routes/posts/admin-JVSTIGVI.js','imports':['/build/_shared/chunk-KOFPMDLO.js','/build/_shared/chunk-YD2CFXBM.js','/build/_shared/chunk-4KL7V6EI.js','/build/_shared/chunk-TMJLOEVS.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/posts/admin/$slug':{'id':'routes/posts/admin/$slug','parentId':'routes/posts/admin','path':':slug','index':undefined,'caseSensitive':undefined,'module':'/build/routes/posts/admin/$slug-XY3MZQI6.js','imports':['/build/_shared/chunk-AUYLHJJM.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/posts/admin/index':{'id':'routes/posts/admin/index','parentId':'routes/posts/admin','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/posts/admin/index-6XSZIM3O.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/posts/index':{'id':'routes/posts/index','parentId':'routes/posts','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/posts/index-PBFDQMEI.js','imports':['/build/_shared/chunk-KOFPMDLO.js','/build/_shared/chunk-YD2CFXBM.js','/build/_shared/chunk-CDIATO7R.js','/build/_shared/chunk-4KL7V6EI.js','/build/_shared/chunk-TMJLOEVS.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/posts/user':{'id':'routes/posts/user','parentId':'routes/posts','path':'user','index':undefined,'caseSensitive':undefined,'module':'/build/routes/posts/user-AV6PD35K.js','imports':['/build/_shared/chunk-KOFPMDLO.js','/build/_shared/chunk-YD2CFXBM.js','/build/_shared/chunk-CDIATO7R.js','/build/_shared/chunk-4KL7V6EI.js','/build/_shared/chunk-TMJLOEVS.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/posts/user/$slug':{'id':'routes/posts/user/$slug','parentId':'routes/posts/user','path':':slug','index':undefined,'caseSensitive':undefined,'module':'/build/routes/posts/user/$slug-TPEZJSPJ.js','imports':['/build/_shared/chunk-AUYLHJJM.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/posts/user/index':{'id':'routes/posts/user/index','parentId':'routes/posts/user','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/posts/user/index-UN62NK2N.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'version':'1d54faee','hmr':undefined,'url':'/build/manifest-1D54FAEE.js'};", "\nimport * as entryServer from \"C:\\\\Users\\\\nswal\\\\OneDrive\\\\Desktop\\\\jobjourneys\\\\jobjourney\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/PasswordResetSuccess/index.tsx\";\nimport * as route2 from \"./routes/password-reset/index.tsx\";\nimport * as route3 from \"./routes\\\\healthcheck.tsx\";\nimport * as route4 from \"./routes\\\\jobappnotes.tsx\";\nimport * as route5 from \"./routes\\\\cookie.ts\";\nimport * as route6 from \"./routes\\\\forgot.tsx\";\nimport * as route7 from \"./routes\\\\logout.tsx\";\nimport * as route8 from \"./routes\\\\index.tsx\";\nimport * as route9 from \"./routes\\\\login.tsx\";\nimport * as route10 from \"./routes\\\\notes.tsx\";\nimport * as route11 from \"./routes\\\\posts.tsx\";\nimport * as route12 from \"./routes\\\\join.tsx\";\nimport * as route13 from \"./routes/map/index.tsx\";\nimport * as route14 from \"./routes\\\\PasswordResetSuccess\\\\index.tsx\";\nimport * as route15 from \"./routes\\\\password-reset\\\\index.tsx\";\nimport * as route16 from \"./routes\\\\jobappnotes\\\\$jobappnoteId.tsx\";\nimport * as route17 from \"./routes\\\\jobappnotes\\\\index.tsx\";\nimport * as route18 from \"./routes\\\\jobappnotes\\\\new.tsx\";\nimport * as route19 from \"./routes\\\\map\\\\index.tsx\";\nimport * as route20 from \"./routes\\\\notes\\\\$noteId.tsx\";\nimport * as route21 from \"./routes\\\\notes\\\\index.tsx\";\nimport * as route22 from \"./routes\\\\notes\\\\new.tsx\";\nimport * as route23 from \"./routes\\\\posts\\\\$slug.tsx\";\nimport * as route24 from \"./routes\\\\posts\\\\admin.tsx\";\nimport * as route25 from \"./routes\\\\posts\\\\admin\\\\$slug.tsx\";\nimport * as route26 from \"./routes\\\\posts\\\\admin\\\\index.tsx\";\nimport * as route27 from \"./routes\\\\posts\\\\index.tsx\";\nimport * as route28 from \"./routes\\\\posts\\\\user.tsx\";\nimport * as route29 from \"./routes\\\\posts\\\\user\\\\$slug.tsx\";\nimport * as route30 from \"./routes\\\\posts\\\\user\\\\index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"./public/build\";\n  export const future = {\"v2_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":true,\"v2_headers\":false,\"v2_meta\":false,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/PasswordResetSuccess\": {\n      id: \"routes/PasswordResetSuccess\",\n      parentId: \"root\",\n      path: \"PasswordResetSuccess\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/password-reset\": {\n      id: \"routes/password-reset\",\n      parentId: \"root\",\n      path: \"password-reset\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/healthcheck\": {\n      id: \"routes/healthcheck\",\n      parentId: \"root\",\n      path: \"healthcheck\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/jobappnotes\": {\n      id: \"routes/jobappnotes\",\n      parentId: \"root\",\n      path: \"jobappnotes\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/cookie\": {\n      id: \"routes/cookie\",\n      parentId: \"root\",\n      path: \"cookie\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/forgot\": {\n      id: \"routes/forgot\",\n      parentId: \"root\",\n      path: \"forgot\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/notes\": {\n      id: \"routes/notes\",\n      parentId: \"root\",\n      path: \"notes\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/posts\": {\n      id: \"routes/posts\",\n      parentId: \"root\",\n      path: \"posts\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/join\": {\n      id: \"routes/join\",\n      parentId: \"root\",\n      path: \"join\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/map\": {\n      id: \"routes/map\",\n      parentId: \"root\",\n      path: \"map\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/PasswordResetSuccess/index\": {\n      id: \"routes/PasswordResetSuccess/index\",\n      parentId: \"root\",\n      path: \"PasswordResetSuccess\",\n      index: true,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/password-reset/index\": {\n      id: \"routes/password-reset/index\",\n      parentId: \"root\",\n      path: \"password-reset\",\n      index: true,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/jobappnotes/$jobappnoteId\": {\n      id: \"routes/jobappnotes/$jobappnoteId\",\n      parentId: \"routes/jobappnotes\",\n      path: \":jobappnoteId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/jobappnotes/index\": {\n      id: \"routes/jobappnotes/index\",\n      parentId: \"routes/jobappnotes\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/jobappnotes/new\": {\n      id: \"routes/jobappnotes/new\",\n      parentId: \"routes/jobappnotes\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route18\n    },\n  \"routes/map/index\": {\n      id: \"routes/map/index\",\n      parentId: \"root\",\n      path: \"map\",\n      index: true,\n      caseSensitive: undefined,\n      module: route19\n    },\n  \"routes/notes/$noteId\": {\n      id: \"routes/notes/$noteId\",\n      parentId: \"routes/notes\",\n      path: \":noteId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route20\n    },\n  \"routes/notes/index\": {\n      id: \"routes/notes/index\",\n      parentId: \"routes/notes\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route21\n    },\n  \"routes/notes/new\": {\n      id: \"routes/notes/new\",\n      parentId: \"routes/notes\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route22\n    },\n  \"routes/posts/$slug\": {\n      id: \"routes/posts/$slug\",\n      parentId: \"routes/posts\",\n      path: \":slug\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route23\n    },\n  \"routes/posts/admin\": {\n      id: \"routes/posts/admin\",\n      parentId: \"routes/posts\",\n      path: \"admin\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route24\n    },\n  \"routes/posts/admin/$slug\": {\n      id: \"routes/posts/admin/$slug\",\n      parentId: \"routes/posts/admin\",\n      path: \":slug\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route25\n    },\n  \"routes/posts/admin/index\": {\n      id: \"routes/posts/admin/index\",\n      parentId: \"routes/posts/admin\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route26\n    },\n  \"routes/posts/index\": {\n      id: \"routes/posts/index\",\n      parentId: \"routes/posts\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route27\n    },\n  \"routes/posts/user\": {\n      id: \"routes/posts/user\",\n      parentId: \"routes/posts\",\n      path: \"user\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route28\n    },\n  \"routes/posts/user/$slug\": {\n      id: \"routes/posts/user/$slug\",\n      parentId: \"routes/posts/user\",\n      path: \":slug\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route29\n    },\n  \"routes/posts/user/index\": {\n      id: \"routes/posts/user/index\",\n      parentId: \"routes/posts/user\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route30\n    }\n  };"],
  "mappings": "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",
  "names": ["invariant", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "import_react_router_dom", "import_jsx_dev_runtime", "import_node", "import_tiny_invariant", "bcrypt", "uuidv4", "bcrypt", "nodemailer", "bcrypt", "invariant", "import_jsx_dev_runtime", "ENV", "loader", "import_react", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "email", "action", "loader", "import_node", "import_react", "React", "import_framer_motion", "import_react", "route", "import_react_hot_toast", "import_node", "getSession", "import_jsx_dev_runtime", "loader", "getRandomImage", "action", "getSession", "loader", "loader", "loader", "import_node", "import_react", "prisma", "import_jsx_dev_runtime", "loader", "action", "import_node", "action", "import_node", "import_react", "import_react", "import_framer_motion", "import_jsx_dev_runtime", "getRandomImage", "action", "React", "_a", "_b", "action", "loader", "import_node", "action", "loader", "loader", "import_react", "import_framer_motion", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "getRandomImage", "action", "loader", "meta", "import_node", "import_react", "import_react", "import_framer_motion", "import_jsx_dev_runtime", "loader", "getSession", "getRandomImage", "action", "meta", "React", "_a", "_b", "_c", "_d", "NotesPage", "loader", "import_node", "import_react", "deleteNote", "import_jsx_dev_runtime", "loader", "NotesPage", "import_react", "import_jsx_dev_runtime", "action", "loader", "meta", "import_node", "import_react", "React", "import_react", "import_framer_motion", "import_jsx_dev_runtime", "loader", "getRandomImage", "action", "meta", "_a", "_b", "_c", "_d", "loader", "import_react", "import_node", "import_jsx_dev_runtime", "loader", "ErrorBoundary", "action", "loader", "import_node", "import_react", "import_tiny_invariant", "import_framer_motion", "import_jsx_dev_runtime", "loader", "invariant", "action", "ErrorBoundary", "jobappnotes_exports", "import_react", "import_framer_motion", "import_jsx_dev_runtime", "action", "import_node", "import_react", "import_uuid", "import_framer_motion", "import_jsx_dev_runtime", "action", "uuidv4", "React", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "_j", "_k", "_l", "_m", "_n", "_o", "_p", "_q", "_r", "_s", "_t", "_u", "_v", "_w", "_x", "CatchBoundary", "ErrorBoundary", "action", "NoteDetailsPage", "loader", "import_node", "import_react", "import_tiny_invariant", "import_framer_motion", "import_jsx_dev_runtime", "loader", "invariant", "action", "deleteNote", "NoteDetailsPage", "ErrorBoundary", "CatchBoundary", "notes_exports", "import_react", "import_framer_motion", "import_jsx_dev_runtime", "new_exports", "action", "import_node", "import_react", "React", "import_framer_motion", "import_jsx_dev_runtime", "action", "_a", "_b", "_c", "_d", "PostsRoute", "loader", "import_react", "import_react", "import_node", "import_tiny_invariant", "import_jsx_dev_runtime", "loader", "invariant", "PostsRoute", "ErrorBoundary", "loader", "import_react", "import_node", "import_jsx_dev_runtime", "loader", "ErrorBoundary", "slug_exports", "CatchBoundary", "ErrorBoundary", "action", "loader", "import_react", "import_node", "import_tiny_invariant", "import_jsx_dev_runtime", "loader", "invariant", "action", "address", "CatchBoundary", "ErrorBoundary", "admin_exports", "import_react", "import_jsx_dev_runtime", "posts_exports", "PostsRoute", "loader", "import_react", "import_node", "import_react", "import_framer_motion", "import_jsx_dev_runtime", "loader", "PostsRoute", "isOpen", "ErrorBoundary", "loader", "import_react", "import_react_router_dom", "import_node", "import_framer_motion", "import_jsx_dev_runtime", "loader", "getRandomImage", "ErrorBoundary", "slug_exports", "CatchBoundary", "ErrorBoundary", "action", "NewPostRoute", "loader", "import_react", "import_node", "import_tiny_invariant", "import_framer_motion", "import_jsx_dev_runtime", "loader", "invariant", "action", "inputClassName", "autocomplete", "address", "axios", "NewPostRoute", "CatchBoundary", "ErrorBoundary", "user_exports", "import_react", "import_framer_motion", "import_jsx_dev_runtime", "jobappnotes_exports", "notes_exports", "new_exports", "slug_exports", "admin_exports", "posts_exports", "user_exports"]
}
